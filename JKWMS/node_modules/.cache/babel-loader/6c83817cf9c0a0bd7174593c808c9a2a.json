{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/jk/Desktop/obj/jkwmsweb/src/containers/warehouse/warehouseAreaEdit.js\";\n// -- 编辑厂商\nimport React, { Component } from 'react';\nimport { NetWork_Post } from '../../network/netUtils';\nvar Option = _Select.Option;\nvar TextArea = _Input.TextArea;\nvar FormItem = _Form.Item;\n\nvar warehouseAreaEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(warehouseAreaEdit, _Component);\n\n  function warehouseAreaEdit(props) {\n    var _this;\n\n    _classCallCheck(this, warehouseAreaEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(warehouseAreaEdit).call(this, props));\n\n    _this._getWarehouseList = function () {\n      var formData = {\n        limit: 10000,\n        page: 1\n      };\n      NetWork_Post('warehouseList', formData, function (response) {\n        var status = response.status,\n            data = response.data,\n            msg = response.msg;\n        console.log('warehouseList', response);\n\n        if (status === '0000') {\n          _this.setState({\n            warehouseList: data.warehouseList\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this._getWarehouseAreaDetail = function () {\n      var formData = {\n        id: _this.props.match.params.id\n      };\n      NetWork_Post('warehouseAreaDetail', formData, function (response) {\n        console.log('warehouseAreaDetail', response);\n        var status = response.status,\n            data = response.data,\n            msg = response.msg;\n\n        if (status === '0000') {\n          _this.props.form.setFieldsValue({\n            warehouse_num: data.warehouse_num,\n            warea_name: data.warea_name,\n            warea_num: data.warea_num,\n            warea_type: data.warea_type === 0 ? '收货区' : data.warea_type === 1 ? '存储区' : data.warea_type === 2 ? '次品区' : data.warea_type === 3 ? '拣货区' : null,\n            remark: data.remark\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this._getProvinceList = function () {\n      var formData = {};\n      NetWork_Post('areaList', formData, function (response) {\n        console.log('ProvinceList', response);\n        var status = response.status,\n            data = response.data;\n\n        if (status === '0000') {\n          _this.setState({\n            provinceList: data\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n        }\n      });\n    };\n\n    _this._getCityList = function (area_name) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var formData = {\n        area_name: area_name,\n        area_level: 1\n      };\n      NetWork_Post('areaList', formData, function (response) {\n        console.log('CityList', response);\n        var status = response.status,\n            data = response.data;\n\n        if (status === '0000') {\n          _this.setState({\n            cityList: data\n          }, function () {\n            return type ? _this.props.form.setFieldsValue({\n              city: null,\n              area: null\n            }) : null;\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n        }\n      });\n    };\n\n    _this._getAreaList = function (area_name) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var formData = {\n        area_name: area_name,\n        area_level: 2\n      };\n      NetWork_Post('areaList', formData, function (response) {\n        console.log('areaList', response);\n        var status = response.status,\n            data = response.data;\n\n        if (status === '0000') {\n          _this.setState({\n            areaList: data\n          }, function () {\n            return type ? _this.props.form.setFieldsValue({\n              area: null\n            }) : null;\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n        }\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (err) return;\n        values.id = _this.props.match.params.id;\n        NetWork_Post('warehouseEdit', values, function (response) {\n          var status = response.status,\n              msg = response.msg;\n\n          if (status === '0000') {\n            _message.success(msg);\n\n            return _this.props.history.goBack();\n          } else {\n            if (status === '1003') return _this.props.history.push('/');\n\n            _message.error(msg);\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      warehouseList: []\n    };\n    return _this;\n  }\n\n  _createClass(warehouseAreaEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._getWarehouseAreaDetail(); //-- 获取仓库列表\n\n\n      this._getWarehouseList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 3\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 21\n          }\n        }\n      };\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u4ED3\\u5E93\\u7F16\\u53F7:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), getFieldDecorator('warehouse_num', {\n        rules: [{\n          required: true,\n          message: '请输入仓库编号！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4ED3\\u5E93\\u540D\\u79F0:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), getFieldDecorator('warehouse_name', {\n        rules: [{\n          required: true,\n          message: '请输入仓库名称！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u59D3\\u540D:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), getFieldDecorator('pic_name', {\n        rules: [{\n          required: true,\n          message: '请输入负责人姓名！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u7535\\u8BDD:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), getFieldDecorator('pic_tel', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u624B\\u673A:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), getFieldDecorator('pic_mobile', {\n        rules: [{\n          required: true,\n          message: '请输入负责人手机！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u4F20\\u771F:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), getFieldDecorator('pic_fax', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBAqq:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), getFieldDecorator('pic_qq', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u5FAE\\u4FE1:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), getFieldDecorator('pic_wechat', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u90AE\\u7BB1:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), getFieldDecorator('pic_email', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u4ED3\\u5E93\\u6240\\u5728\\u7701:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), getFieldDecorator('province', {\n        rules: [{\n          required: true,\n          message: '请选择仓库所在省！'\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          maxWidth: 300\n        },\n        onChange: function onChange(value) {\n          return _this2._getCityList(value, true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.state.provinceList ? this.state.provinceList.map(function (item, index) {\n        return React.createElement(Option, {\n          key: index,\n          value: item.area_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, item.area_name);\n      }) : null))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u4ED3\\u5E93\\u6240\\u5728\\u5E02:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), getFieldDecorator('city', {\n        rules: [{\n          required: true,\n          message: '请选择仓库所在市！'\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          maxWidth: 300\n        },\n        onChange: function onChange(value) {\n          return _this2._getAreaList(value, true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, this.state.cityList ? this.state.cityList.map(function (item, index) {\n        return React.createElement(Option, {\n          key: index,\n          value: item.area_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, item.area_name);\n      }) : null))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u4ED3\\u5E93\\u6240\\u5728\\u533A:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), getFieldDecorator('area', {\n        rules: [{\n          required: true,\n          message: '请选择仓库所在区！'\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, this.state.areaList ? this.state.areaList.map(function (item, index) {\n        return React.createElement(Option, {\n          key: index,\n          value: item.area_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, item.area_name);\n      }) : null))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5177\\u4F53\\u5730\\u5740:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), getFieldDecorator('address', {\n        rules: [{\n          required: true,\n          message: '请输入具体地址！'\n        }]\n      })(React.createElement(TextArea, {\n        style: {\n          maxWidth: 300\n        },\n        rows: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u63A5\\u6536\\u65E5\\u671F:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), getFieldDecorator('receiving_date', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5907\\u6CE8:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), getFieldDecorator('remark', {\n        rules: []\n      })(React.createElement(TextArea, {\n        style: {\n          maxWidth: 300\n        },\n        rows: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        wrapperCol: {\n          span: 8,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        icon: \"save\",\n        htmlType: \"submit\",\n        style: {\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        style: {\n          marginLeft: 10,\n          float: \"right\"\n        },\n        icon: \"rollback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"))));\n    }\n  }]);\n\n  return warehouseAreaEdit;\n}(Component);\n\nexport default _Form.create()(warehouseAreaEdit);","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/containers/warehouse/warehouseAreaEdit.js"],"names":["React","Component","NetWork_Post","Option","TextArea","FormItem","Item","warehouseAreaEdit","props","_getWarehouseList","formData","limit","page","response","status","data","msg","console","log","setState","warehouseList","history","push","error","_getWarehouseAreaDetail","id","match","params","form","setFieldsValue","warehouse_num","warea_name","warea_num","warea_type","remark","_getProvinceList","provinceList","_getCityList","area_name","type","area_level","cityList","city","area","_getAreaList","areaList","handleSubmit","e","preventDefault","validateFields","err","values","success","goBack","state","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","width","rules","required","message","maxWidth","value","map","item","index","offset","float","marginLeft","create"],"mappings":"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","sourcesContent":["// -- 编辑厂商\nimport React, { Component } from 'react';\nimport { Form, Select, Button, Input, message } from 'antd'\nimport { NetWork_Post } from '../../network/netUtils'\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\nclass warehouseAreaEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            warehouseList: []\n        }\n    }\n    componentDidMount() {\n        this._getWarehouseAreaDetail()\n        //-- 获取仓库列表\n        this._getWarehouseList()\n    }\n    _getWarehouseList = () => {\n        const formData = {\n            limit: 10000,\n            page: 1\n        }\n        NetWork_Post('warehouseList', formData, (response) => {\n            const { status, data, msg } = response\n            console.log('warehouseList', response)\n            if (status === '0000') {\n                this.setState({\n                    warehouseList: data.warehouseList\n                })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    _getWarehouseAreaDetail = () => {\n        const formData = {\n            id: this.props.match.params.id\n        }\n        NetWork_Post('warehouseAreaDetail', formData, (response) => {\n            console.log('warehouseAreaDetail', response)\n            const { status, data, msg } = response\n            if (status === '0000') {\n                this.props.form.setFieldsValue({\n                    warehouse_num: data.warehouse_num,\n                    warea_name: data.warea_name,\n                    warea_num: data.warea_num,\n                    warea_type: data.warea_type === 0 ? '收货区' : data.warea_type === 1 ? '存储区' : data.warea_type === 2 ? '次品区' : data.warea_type === 3 ? '拣货区' : null,\n                    remark: data.remark,\n                })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    _getProvinceList = () => {\n        const formData = {\n\n        }\n        NetWork_Post('areaList', formData, (response) => {\n            console.log('ProvinceList', response)\n            const { status, data } = response\n            if (status === '0000') {\n                this.setState({\n                    provinceList: data\n                })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n            }\n        });\n    }\n    _getCityList = (area_name, type = false) => {\n        const formData = {\n            area_name: area_name,\n            area_level: 1\n        }\n        NetWork_Post('areaList', formData, (response) => {\n            console.log('CityList', response)\n            const { status, data } = response\n            if (status === '0000') {\n                this.setState(\n                    {\n                        cityList: data\n                    },\n                    () => type ? this.props.form.setFieldsValue({\n                        city: null,\n                        area: null\n                    }) : null\n                )\n\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n            }\n        });\n    }\n    _getAreaList = (area_name, type = false) => {\n        const formData = {\n            area_name: area_name,\n            area_level: 2\n        }\n        NetWork_Post('areaList', formData, (response) => {\n            console.log('areaList', response)\n            const { status, data } = response\n            if (status === '0000') {\n                this.setState(\n                    {\n                        areaList: data\n                    },\n                    () => type ? this.props.form.setFieldsValue({\n                        area: null\n                    }) : null\n                )\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (err) return;\n            values.id = this.props.match.params.id\n            NetWork_Post('warehouseEdit', values, (response) => {\n                const { status, msg } = response\n                if (status === '0000') {\n                    message.success(msg)\n                    return this.props.history.goBack();\n                } else {\n                    if (status === '1003') return this.props.history.push('/');\n                    message.error(msg)\n                }\n            });\n        });\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 12 },\n                sm: { span: 3 },\n            },\n            wrapperCol: {\n                xs: { span: 12 },\n                sm: { span: 21 },\n            },\n        };\n        return (\n            <Form onSubmit={this.handleSubmit} style={{ width: '100%' }}>\n                <FormItem\n                    label=\"仓库编号:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('warehouse_num', {\n                        rules: [{\n                            required: true, message: '请输入仓库编号！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"仓库名称:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('warehouse_name', {\n                        rules: [{\n                            required: true, message: '请输入仓库名称！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人姓名:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_name', {\n                        rules: [{\n                            required: true, message: '请输入负责人姓名！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人电话:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_tel', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人手机:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_mobile', {\n                        rules: [{\n                            required: true, message: '请输入负责人手机！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人传真:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_fax', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人qq:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_qq', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人微信:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_wechat', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人邮箱:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_email', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"仓库所在省:\"\n                >\n                    {getFieldDecorator('province', {\n                        rules: [{\n                            required: true, message: '请选择仓库所在省！',\n                        }],\n                    })(\n                        <Select placeholder='请选择' style={{ maxWidth: 300 }} onChange={(value) => this._getCityList(value, true)} >\n                            {\n                                this.state.provinceList ? this.state.provinceList.map((item, index) => (\n                                    <Option key={index} value={item.area_name}>{item.area_name}</Option>\n                                )) : null\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"仓库所在市:\"\n                >\n                    {getFieldDecorator('city', {\n                        rules: [{\n                            required: true, message: '请选择仓库所在市！',\n                        }],\n                    })(\n                        <Select placeholder='请选择' style={{ maxWidth: 300 }} onChange={(value) => this._getAreaList(value, true)}>\n                            {\n                                this.state.cityList ? this.state.cityList.map((item, index) => (\n                                    <Option key={index} value={item.area_name} >{item.area_name}</Option>\n                                )) : null\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"仓库所在区:\"\n                >\n                    {getFieldDecorator('area', {\n                        rules: [{\n                            required: true, message: '请选择仓库所在区！',\n                        }],\n                    })(\n                        <Select placeholder='请选择' style={{ maxWidth: 300 }}>\n                            {\n                                this.state.areaList ? this.state.areaList.map((item, index) => (\n                                    <Option key={index} value={item.area_name}>{item.area_name}</Option>\n                                )) : null\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"具体地址:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('address', {\n                        rules: [{\n                            required: true, message: '请输入具体地址！',\n                        }],\n                    })(\n                        <TextArea style={{ maxWidth: 300 }} rows={3} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"接收日期:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('receiving_date', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"备注:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('remark', {\n                        rules: [],\n                    })(\n                        <TextArea style={{ maxWidth: 300 }} rows={3} />\n                    )}\n                </FormItem>\n                <FormItem wrapperCol={{ span: 8, offset: 3 }}>\n                    <div style={{ maxWidth: 300 }}>\n                        <Button icon='save' htmlType=\"submit\" style={{ float: \"left\" }}>\n                            提交\n                        </Button>\n                        <Button onClick={() => { this.props.history.goBack() }} style={{ marginLeft: 10, float: \"right\" }} icon='rollback'>\n                            返回\n                        </Button>\n                    </div>\n                </FormItem>\n            </Form>\n        )\n    }\n}\nexport default Form.create()(warehouseAreaEdit)"]},"metadata":{},"sourceType":"module"}