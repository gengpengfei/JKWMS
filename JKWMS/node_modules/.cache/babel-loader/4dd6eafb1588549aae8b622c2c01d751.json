{"ast":null,"code":"/**\n\n * @param {* date } date时间对象\n * @param {* fmt，想要的时间格式} sizeStr\n * @return {* 所需的字符串}\n */\nfunction dateTransform(date, fmt) {\n  var o = {\n    \"M+\": date.getMonth() + 1,\n    //月份\n    \"d+\": date.getDate(),\n    //日\n    \"h+\": date.getHours(),\n    //小时\n    \"m+\": date.getMinutes(),\n    //分\n    \"s+\": date.getSeconds(),\n    //秒\n    \"q+\": Math.floor((date.getMonth() + 3) / 3),\n    //季度\n    \"S\": date.getMilliseconds() //毫秒\n\n  };\n  if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n  }\n\n  return fmt;\n}\n/**\n * @author hulinhua\n * @param {* inputDate } date对象\n * @return {* t2 } 上一个月，date对象\n */\n\n\nfunction getPreMonth(inputDate) {\n  /*******获取年月日********/\n  var year = inputDate.getFullYear(); //获取当前日期的年份  \n\n  var month = inputDate.getMonth() + 1; //获取当前日期的月份  \n\n  var day = inputDate.getDate(); //获取当前日期的日  \n\n  /*******计算上一个月的年月日********/\n\n  var year2 = year;\n  var month2 = parseInt(month) - 1;\n\n  if (month2 === 0) {\n    year2 = parseInt(year2) - 1;\n    month2 = 12;\n  }\n\n  var day2 = day;\n  var days2 = new Date(year2, month2, 0);\n  days2 = days2.getDate();\n\n  if (day2 > days2) {\n    day2 = days2;\n  }\n\n  if (month2 < 10) {\n    month2 = '0' + month2;\n  }\n  /*******将年月日转换成date 对象********/\n\n\n  var t2 = new Date(year2, month2 - 1, day2);\n  return t2;\n}\n/**\n * @author hulinhua\n * @param {* inputDate } date对象\n * @return {* t2 } 上一个月，date对象\n */\n\n\nfunction getNextMonth(inputDate) {\n  /*******获取年月日********/\n  var year = inputDate.getFullYear(); //获取当前日期的年份  \n\n  var month = inputDate.getMonth() + 1; //获取当前日期的月份  \n\n  var day = inputDate.getDate(); //获取当前日期的日  \n\n  /*******计算下一个月的年月日********/\n\n  var year2 = year;\n  var month2 = parseInt(month) + 1;\n\n  if (month2 === 13) {\n    year2 = parseInt(year2) + 1;\n    month2 = 1;\n  }\n\n  var day2 = day;\n  var days2 = new Date(year2, month2, 0);\n  days2 = days2.getDate();\n\n  if (day2 > days2) {\n    day2 = days2;\n  }\n\n  if (month2 < 10) {\n    month2 = '0' + month2;\n  }\n  /*******将年月日转换成date 对象********/\n\n\n  var t2 = new Date(year2, month2 - 1, day2);\n  return t2;\n}\n/**\n * @author hulinhua\n * @param {* inputDate } date对象\n * @return {* t2 } 下一天,date对象\n */\n\n\nfunction getNextDay(inputDate) {\n  /*******获取年月日********/\n  var year = inputDate.getFullYear(); //获取当前日期的年份  \n\n  var month = inputDate.getMonth(); //获取当前日期的月份  \n\n  var day = inputDate.getDate(); //获取当前日期的日  \n\n  /*******将年月日转换成date 对象********/\n\n  var t2 = new Date(year, month, day + 1);\n  return t2;\n}\n/**\n * @author hulinhua\n * @description 获取星期几\n * @param {* inputDate } date对象\n * @return {* t2 } 下一天,date对象\n */\n\n\nfunction getWeekDay(inputDate) {\n  var day = inputDate.getDay();\n  var dayName = '';\n\n  switch (day) {\n    case 0:\n      dayName = \"星期天\";\n      break;\n\n    case 1:\n      dayName = \"星期一\";\n      break;\n\n    case 2:\n      dayName = \"星期二\";\n      break;\n\n    case 3:\n      dayName = \"星期三\";\n      break;\n\n    case 4:\n      dayName = \"星期四\";\n      break;\n\n    case 5:\n      dayName = \"星期五\";\n      break;\n\n    case 6:\n      dayName = \"星期六\";\n      break;\n\n    default:\n      break;\n  }\n\n  return dayName;\n}\n/**\n * @description 是否是同一年\n * @param {* 日期1 } date1 \n * @param {* 日期1 } date2 \n * @return bool\n */\n\n\nfunction yearIsEquire(date1, date2) {\n  var year1 = date1.getFullYear();\n  var year2 = date2.getFullYear();\n  return year1 === year2 ? true : false;\n}\n/**\n * @description 是否是同一月\n * @param {* 日期1 } date1 \n * @param {* 日期1 } date2 \n * @return bool\n */\n\n\nfunction monthIsEquire(date1, date2) {\n  if (yearIsEquire(date1, date2)) {\n    var month1 = date1.getMonth();\n    var month2 = date2.getMonth();\n    return month1 === month2 ? true : false;\n  } else {\n    return false;\n  }\n}\n/**\n * @description 是否是同一天\n * @param {* 日期1 } date1 \n * @param {* 日期1 } date2 \n * @return bool\n */\n\n\nfunction dayIsEquire(date1, date2) {\n  if (monthIsEquire(date1, date2)) {\n    var day1 = date1.getDate();\n    var day2 = date2.getDate();\n    return day1 === day2 ? true : false;\n  } else {\n    return false;\n  }\n}\n\nexport { dateTransform, getPreMonth, getNextMonth, getNextDay, getWeekDay, yearIsEquire, monthIsEquire, dayIsEquire };","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/utils/utils_date.js"],"names":["dateTransform","date","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","getPreMonth","inputDate","year","month","day","year2","month2","parseInt","day2","days2","Date","t2","getNextMonth","getNextDay","getWeekDay","getDay","dayName","yearIsEquire","date1","date2","year1","monthIsEquire","month1","dayIsEquire","day1"],"mappings":"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","sourcesContent":["\n/**\n\n * @param {* date } date时间对象\n * @param {* fmt，想要的时间格式} sizeStr\n * @return {* 所需的字符串}\n */\n\nfunction dateTransform(date, fmt) {\n    var o = {\n        \"M+\": date.getMonth() + 1,                 //月份\n        \"d+\": date.getDate(),                    //日\n        \"h+\": date.getHours(),                   //小时\n        \"m+\": date.getMinutes(),                 //分\n        \"s+\": date.getSeconds(),                 //秒\n        \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\n        \"S\": date.getMilliseconds()             //毫秒\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\n/**\n * @author hulinhua\n * @param {* inputDate } date对象\n * @return {* t2 } 上一个月，date对象\n */\nfunction getPreMonth(inputDate) {\n\n    /*******获取年月日********/\n    var year = inputDate.getFullYear(); //获取当前日期的年份  \n    var month = inputDate.getMonth() + 1; //获取当前日期的月份  \n    var day = inputDate.getDate(); //获取当前日期的日  \n\n    /*******计算上一个月的年月日********/\n    var year2 = year;\n    var month2 = parseInt(month) - 1;\n    if (month2 === 0) {\n        year2 = parseInt(year2) - 1;\n        month2 = 12;\n    }\n    var day2 = day;\n    var days2 = new Date(year2, month2, 0);\n    days2 = days2.getDate();\n    if (day2 > days2) {\n        day2 = days2;\n    }\n    if (month2 < 10) {\n        month2 = '0' + month2;\n    }\n\n    /*******将年月日转换成date 对象********/\n    var t2 = new Date(year2, month2 - 1, day2);\n    return t2;\n}\n\n\n/**\n * @author hulinhua\n * @param {* inputDate } date对象\n * @return {* t2 } 上一个月，date对象\n */\nfunction getNextMonth(inputDate) {\n\n\n    /*******获取年月日********/\n    var year = inputDate.getFullYear(); //获取当前日期的年份  \n    var month = inputDate.getMonth() + 1; //获取当前日期的月份  \n    var day = inputDate.getDate(); //获取当前日期的日  \n\n    /*******计算下一个月的年月日********/\n    var year2 = year;\n    var month2 = parseInt(month) + 1;\n    if (month2 === 13) {\n        year2 = parseInt(year2) + 1;\n        month2 = 1;\n    }\n    var day2 = day;\n    var days2 = new Date(year2, month2, 0);\n    days2 = days2.getDate();\n    if (day2 > days2) {\n        day2 = days2;\n    }\n    if (month2 < 10) {\n        month2 = '0' + month2;\n    }\n\n    /*******将年月日转换成date 对象********/\n    var t2 = new Date(year2, month2 - 1, day2);\n    return t2;\n}\n\n\n/**\n * @author hulinhua\n * @param {* inputDate } date对象\n * @return {* t2 } 下一天,date对象\n */\nfunction getNextDay(inputDate) {\n\n\n    /*******获取年月日********/\n    var year = inputDate.getFullYear(); //获取当前日期的年份  \n    var month = inputDate.getMonth(); //获取当前日期的月份  \n    var day = inputDate.getDate(); //获取当前日期的日  \n\n    /*******将年月日转换成date 对象********/\n    var t2 = new Date(year, month, day + 1);\n    return t2;\n}\n\n\n/**\n * @author hulinhua\n * @description 获取星期几\n * @param {* inputDate } date对象\n * @return {* t2 } 下一天,date对象\n */\nfunction getWeekDay(inputDate) {\n    var day = inputDate.getDay();\n\n    var dayName = '';\n    switch (day) {\n        case 0:\n            dayName = \"星期天\";\n            break;\n        case 1:\n            dayName = \"星期一\";\n            break;\n        case 2:\n            dayName = \"星期二\";\n            break;\n        case 3:\n            dayName = \"星期三\";\n            break;\n        case 4:\n            dayName = \"星期四\";\n            break;\n        case 5:\n            dayName = \"星期五\";\n            break;\n\n        case 6:\n            dayName = \"星期六\";\n            break;\n\n        default:\n            break;\n    }\n\n    return dayName;\n\n}\n\n/**\n * @description 是否是同一年\n * @param {* 日期1 } date1 \n * @param {* 日期1 } date2 \n * @return bool\n */\nfunction yearIsEquire(date1, date2) {\n\n    var year1 = date1.getFullYear();\n    var year2 = date2.getFullYear();\n\n    return year1 === year2 ? true : false;\n}\n\n/**\n * @description 是否是同一月\n * @param {* 日期1 } date1 \n * @param {* 日期1 } date2 \n * @return bool\n */\nfunction monthIsEquire(date1, date2) {\n    if (yearIsEquire(date1, date2)) {\n        var month1 = date1.getMonth();\n        var month2 = date2.getMonth();\n        return month1 === month2 ? true : false;\n    } else {\n        return false;\n    }\n}\n\n/**\n * @description 是否是同一天\n * @param {* 日期1 } date1 \n * @param {* 日期1 } date2 \n * @return bool\n */\nfunction dayIsEquire(date1, date2) {\n\n    if (monthIsEquire(date1, date2)) {\n        var day1 = date1.getDate();\n        var day2 = date2.getDate();\n        return day1 === day2 ? true : false;\n    } else {\n        return false;\n    }\n}\n\nexport {\n    dateTransform,\n    getPreMonth,\n    getNextMonth,\n    getNextDay,\n    getWeekDay,\n    yearIsEquire,\n    monthIsEquire,\n    dayIsEquire,\n\n}\n\n"]},"metadata":{},"sourceType":"module"}