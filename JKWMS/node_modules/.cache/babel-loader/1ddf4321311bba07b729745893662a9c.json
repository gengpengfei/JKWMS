{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _moment = require('moment');\n\nvar moment = _interopRequireWildcard(_moment);\n\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\n\nvar _RangeCalendar = require('rc-calendar/lib/RangeCalendar');\n\nvar _RangeCalendar2 = _interopRequireDefault(_RangeCalendar);\n\nvar _Picker = require('rc-calendar/lib/Picker');\n\nvar _Picker2 = _interopRequireDefault(_Picker);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _shallowequal = require('shallowequal');\n\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _tag = require('../tag');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _warning = require('../_util/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _interopDefault = require('../_util/interopDefault');\n\nvar _interopDefault2 = _interopRequireDefault(_interopDefault);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction getShowDateFromValue(value) {\n  var _value = (0, _slicedToArray3['default'])(value, 2),\n      start = _value[0],\n      end = _value[1]; // value could be an empty array, then we should not reset showDate\n\n\n  if (!start && !end) {\n    return;\n  }\n\n  var newEnd = end && end.isSame(start, 'month') ? end.clone().add(1, 'month') : end;\n  return [start, newEnd];\n}\n/* tslint:disable jsx-no-multiline-js */\n\n\nfunction formatValue(value, format) {\n  return value && value.format(format) || '';\n}\n\nfunction pickerValueAdapter(value) {\n  if (!value) {\n    return;\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return [value, value.clone().add(1, 'month')];\n}\n\nfunction isEmptyArray(arr) {\n  if (Array.isArray(arr)) {\n    return arr.length === 0 || arr.every(function (i) {\n      return !i;\n    });\n  }\n\n  return false;\n}\n\nfunction fixLocale(value, localeCode) {\n  if (!localeCode) {\n    return;\n  }\n\n  if (!value || value.length === 0) {\n    return;\n  }\n\n  if (value[0]) {\n    value[0].locale(localeCode);\n  }\n\n  if (value[1]) {\n    value[1].locale(localeCode);\n  }\n}\n\nvar RangePicker = function (_React$Component) {\n  (0, _inherits3['default'])(RangePicker, _React$Component);\n\n  function RangePicker(props) {\n    (0, _classCallCheck3['default'])(this, RangePicker);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (RangePicker.__proto__ || Object.getPrototypeOf(RangePicker)).call(this, props));\n\n    _this.clearSelection = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.setState({\n        value: []\n      });\n\n      _this.handleChange([]);\n    };\n\n    _this.clearHoverValue = function () {\n      return _this.setState({\n        hoverValue: []\n      });\n    };\n\n    _this.handleChange = function (value) {\n      var props = _this.props;\n\n      if (!('value' in props)) {\n        _this.setState(function (_ref) {\n          var showDate = _ref.showDate;\n          return {\n            value: value,\n            showDate: getShowDateFromValue(value) || showDate\n          };\n        });\n      }\n\n      props.onChange(value, [formatValue(value[0], props.format), formatValue(value[1], props.format)]);\n\n      _this.focus();\n    };\n\n    _this.handleOpenChange = function (open) {\n      if (!('open' in _this.props)) {\n        _this.setState({\n          open: open\n        });\n      }\n\n      if (open === false) {\n        _this.clearHoverValue();\n      }\n\n      var onOpenChange = _this.props.onOpenChange;\n\n      if (onOpenChange) {\n        onOpenChange(open);\n      }\n    };\n\n    _this.handleShowDateChange = function (showDate) {\n      return _this.setState({\n        showDate: showDate\n      });\n    };\n\n    _this.handleHoverChange = function (hoverValue) {\n      return _this.setState({\n        hoverValue: hoverValue\n      });\n    };\n\n    _this.handleRangeMouseLeave = function () {\n      if (_this.state.open) {\n        _this.clearHoverValue();\n      }\n    };\n\n    _this.handleCalendarInputSelect = function (value) {\n      if (!value[0]) {\n        return;\n      }\n\n      _this.setState(function (_ref2) {\n        var showDate = _ref2.showDate;\n        return {\n          value: value,\n          showDate: getShowDateFromValue(value) || showDate\n        };\n      });\n    };\n\n    _this.handleRangeClick = function (value) {\n      if (typeof value === 'function') {\n        value = value();\n      }\n\n      _this.setValue(value, true);\n\n      var _this$props = _this.props,\n          onOk = _this$props.onOk,\n          onOpenChange = _this$props.onOpenChange;\n\n      if (onOk) {\n        onOk(value);\n      }\n\n      if (onOpenChange) {\n        onOpenChange(false);\n      }\n    };\n\n    _this.savePicker = function (node) {\n      _this.picker = node;\n    };\n\n    _this.renderFooter = function () {\n      var _this$props2 = _this.props,\n          prefixCls = _this$props2.prefixCls,\n          ranges = _this$props2.ranges,\n          renderExtraFooter = _this$props2.renderExtraFooter,\n          tagPrefixCls = _this$props2.tagPrefixCls;\n\n      if (!ranges && !renderExtraFooter) {\n        return null;\n      }\n\n      var customFooter = renderExtraFooter ? React.createElement('div', {\n        className: prefixCls + '-footer-extra',\n        key: 'extra'\n      }, renderExtraFooter.apply(undefined, arguments)) : null;\n      var operations = Object.keys(ranges || {}).map(function (range) {\n        var value = ranges[range];\n        return React.createElement(_tag2['default'], {\n          key: range,\n          prefixCls: tagPrefixCls,\n          color: 'blue',\n          onClick: function onClick() {\n            return _this.handleRangeClick(value);\n          },\n          onMouseEnter: function onMouseEnter() {\n            return _this.setState({\n              hoverValue: value\n            });\n          },\n          onMouseLeave: _this.handleRangeMouseLeave\n        }, range);\n      });\n      var rangeNode = operations && operations.length > 0 ? React.createElement('div', {\n        className: prefixCls + '-footer-extra ' + prefixCls + '-range-quick-selector',\n        key: 'range'\n      }, operations) : null;\n      return [rangeNode, customFooter];\n    };\n\n    var value = props.value || props.defaultValue || [];\n\n    if (value[0] && !(0, _interopDefault2['default'])(moment).isMoment(value[0]) || value[1] && !(0, _interopDefault2['default'])(moment).isMoment(value[1])) {\n      throw new Error('The value/defaultValue of RangePicker must be a moment object array after `antd@2.0`, ' + 'see: https://u.ant.design/date-picker-value');\n    }\n\n    var pickerValue = !value || isEmptyArray(value) ? props.defaultPickerValue : value;\n    _this.state = {\n      value: value,\n      showDate: pickerValueAdapter(pickerValue || (0, _interopDefault2['default'])(moment)()),\n      open: props.open,\n      hoverValue: []\n    };\n    return _this;\n  }\n\n  (0, _createClass3['default'])(RangePicker, [{\n    key: 'setValue',\n    value: function setValue(value, hidePanel) {\n      this.handleChange(value);\n\n      if ((hidePanel || !this.props.showTime) && !('open' in this.props)) {\n        this.setState({\n          open: false\n        });\n      }\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.picker.focus();\n    }\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this.picker.blur();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classNames,\n          _this2 = this,\n          _classNames2;\n\n      var state = this.state,\n          props = this.props;\n      var value = state.value,\n          showDate = state.showDate,\n          hoverValue = state.hoverValue,\n          open = state.open;\n      var prefixCls = props.prefixCls,\n          popupStyle = props.popupStyle,\n          style = props.style,\n          disabledDate = props.disabledDate,\n          disabledTime = props.disabledTime,\n          showTime = props.showTime,\n          showToday = props.showToday,\n          ranges = props.ranges,\n          onOk = props.onOk,\n          locale = props.locale,\n          localeCode = props.localeCode,\n          format = props.format,\n          dateRender = props.dateRender,\n          onCalendarChange = props.onCalendarChange,\n          suffixIcon = props.suffixIcon;\n      fixLocale(value, localeCode);\n      fixLocale(showDate, localeCode);\n      (0, _warning2['default'])(!('onOK' in props), 'It should be `RangePicker[onOk]`, instead of `onOK`!');\n      var calendarClassName = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-time', showTime), (0, _defineProperty3['default'])(_classNames, prefixCls + '-range-with-ranges', ranges), _classNames)); // 需要选择时间时，点击 ok 时才触发 onChange\n\n      var pickerChangeHandler = {\n        onChange: this.handleChange\n      };\n      var calendarProps = {\n        onOk: this.handleChange\n      };\n\n      if (props.timePicker) {\n        pickerChangeHandler.onChange = function (changedValue) {\n          return _this2.handleChange(changedValue);\n        };\n      } else {\n        calendarProps = {};\n      }\n\n      if ('mode' in props) {\n        calendarProps.mode = props.mode;\n      }\n\n      var startPlaceholder = 'placeholder' in props ? props.placeholder[0] : locale.lang.rangePlaceholder[0];\n      var endPlaceholder = 'placeholder' in props ? props.placeholder[1] : locale.lang.rangePlaceholder[1];\n      var calendar = React.createElement(_RangeCalendar2['default'], (0, _extends3['default'])({}, calendarProps, {\n        onChange: onCalendarChange,\n        format: format,\n        prefixCls: prefixCls,\n        className: calendarClassName,\n        renderFooter: this.renderFooter,\n        timePicker: props.timePicker,\n        disabledDate: disabledDate,\n        disabledTime: disabledTime,\n        dateInputPlaceholder: [startPlaceholder, endPlaceholder],\n        locale: locale.lang,\n        onOk: onOk,\n        dateRender: dateRender,\n        value: showDate,\n        onValueChange: this.handleShowDateChange,\n        hoverValue: hoverValue,\n        onHoverChange: this.handleHoverChange,\n        onPanelChange: props.onPanelChange,\n        showToday: showToday,\n        onInputSelect: this.handleCalendarInputSelect\n      })); // default width for showTime\n\n      var pickerStyle = {};\n\n      if (props.showTime) {\n        pickerStyle.width = style && style.width || 350;\n      }\n\n      var clearIcon = !props.disabled && props.allowClear && value && (value[0] || value[1]) ? React.createElement(_icon2['default'], {\n        type: 'close-circle',\n        className: prefixCls + '-picker-clear',\n        onClick: this.clearSelection,\n        theme: 'filled'\n      }) : null;\n      var inputIcon = suffixIcon && (React.isValidElement(suffixIcon) ? React.cloneElement(suffixIcon, {\n        className: (0, _classnames2['default'])((_classNames2 = {}, (0, _defineProperty3['default'])(_classNames2, suffixIcon.props.className, suffixIcon.props.className), (0, _defineProperty3['default'])(_classNames2, prefixCls + '-picker-icon', true), _classNames2))\n      }) : React.createElement('span', {\n        className: prefixCls + '-picker-icon'\n      }, suffixIcon)) || React.createElement(_icon2['default'], {\n        type: 'calendar',\n        className: prefixCls + '-picker-icon'\n      });\n\n      var input = function input(_ref3) {\n        var inputValue = _ref3.value;\n        var start = inputValue[0];\n        var end = inputValue[1];\n        return React.createElement('span', {\n          className: props.pickerInputClass\n        }, React.createElement('input', {\n          disabled: props.disabled,\n          readOnly: true,\n          value: start && start.format(props.format) || '',\n          placeholder: startPlaceholder,\n          className: prefixCls + '-range-picker-input',\n          tabIndex: -1\n        }), React.createElement('span', {\n          className: prefixCls + '-range-picker-separator'\n        }, ' ~ '), React.createElement('input', {\n          disabled: props.disabled,\n          readOnly: true,\n          value: end && end.format(props.format) || '',\n          placeholder: endPlaceholder,\n          className: prefixCls + '-range-picker-input',\n          tabIndex: -1\n        }), clearIcon, inputIcon);\n      };\n\n      return React.createElement('span', {\n        ref: this.savePicker,\n        id: props.id,\n        className: (0, _classnames2['default'])(props.className, props.pickerClass),\n        style: (0, _extends3['default'])({}, style, pickerStyle),\n        tabIndex: props.disabled ? -1 : 0,\n        onFocus: props.onFocus,\n        onBlur: props.onBlur,\n        onMouseEnter: props.onMouseEnter,\n        onMouseLeave: props.onMouseLeave\n      }, React.createElement(_Picker2['default'], (0, _extends3['default'])({}, props, pickerChangeHandler, {\n        calendar: calendar,\n        value: value,\n        open: open,\n        onOpenChange: this.handleOpenChange,\n        prefixCls: prefixCls + '-picker-container',\n        style: popupStyle\n      }), input));\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var state = null;\n\n      if ('value' in nextProps) {\n        var value = nextProps.value || [];\n        state = {\n          value: value\n        };\n\n        if (!(0, _shallowequal2['default'])(nextProps.value, prevState.value)) {\n          state = (0, _extends3['default'])({}, state, {\n            showDate: getShowDateFromValue(value) || prevState.showDate\n          });\n        }\n      }\n\n      if ('open' in nextProps && prevState.open !== nextProps.open) {\n        state = (0, _extends3['default'])({}, state, {\n          open: nextProps.open\n        });\n      }\n\n      return state;\n    }\n  }]);\n  return RangePicker;\n}(React.Component);\n\nRangePicker.defaultProps = {\n  prefixCls: 'ant-calendar',\n  tagPrefixCls: 'ant-tag',\n  allowClear: true,\n  showToday: false\n};\n(0, _reactLifecyclesCompat.polyfill)(RangePicker);\nexports['default'] = RangePicker;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}