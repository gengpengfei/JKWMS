{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/jk/Desktop/obj/jkwmsweb/src/containers/shop/goodsTypeEdit.js\";\n// -- 绑定供应商\nimport React, { Component } from 'react';\nimport { NetWork_Post } from '../../network/netUtils';\nvar Option = _Select.Option;\nvar TextArea = _Input.TextArea;\nvar FormItem = _Form.Item;\n\nvar goodsTypeEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(goodsTypeEdit, _Component);\n\n  function goodsTypeEdit(props) {\n    var _this;\n\n    _classCallCheck(this, goodsTypeEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(goodsTypeEdit).call(this, props));\n\n    _this._getProTypeDetail = function () {\n      var formData = {\n        pro_type_id: _this.props.match.params.id\n      };\n      NetWork_Post('getParentCode', formData, function (response) {\n        var status = response.status,\n            data = response.data,\n            msg = response.msg;\n\n        if (status === '0000') {\n          _this.setState({\n            goodTypeList: data.goodTypeList\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this._getParentCodeList = function () {\n      var formData = {};\n      NetWork_Post('getParentCode', formData, function (response) {\n        var status = response.status,\n            data = response.data,\n            msg = response.msg;\n\n        if (status === '0000') {\n          _this.setState({\n            goodTypeList: data.goodTypeList\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (err) return;\n        NetWork_Post('productTypeAdd', values, function (response) {\n          var status = response.status,\n              msg = response.msg;\n\n          if (status === '0000') {\n            return _this.props.history.goBack();\n          } else {\n            if (status === '1003') return _this.props.history.push('/');\n\n            _message.error(msg);\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      goodTypeList: []\n    };\n    return _this;\n  }\n\n  _createClass(goodsTypeEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._getProTypeDetail();\n\n      this._getParentCodeList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 3\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 21\n          }\n        }\n      };\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u7236\\u7C7B\\u578B\\u7F16\\u53F7:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), getFieldDecorator('parent_code', {\n        rules: [{\n          required: true,\n          message: '请选择父类型！'\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.goodTypeList.map(function (e, i) {\n        return React.createElement(Option, {\n          key: i,\n          value: e.pro_type_code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, e.pro_type_name);\n      })))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4EA7\\u54C1\\u7C7B\\u578B\\u7F16\\u53F7:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), getFieldDecorator('pro_type_code', {\n        rules: [{\n          required: true,\n          message: '请输入产品类型编号！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4EA7\\u54C1\\u7C7B\\u578B\\u540D\\u79F0:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), getFieldDecorator('pro_type_name', {\n        rules: [{\n          required: true,\n          message: '请输入产品类型名称！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4EA7\\u54C1\\u7C7B\\u578B\\u5907\\u6CE8:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), getFieldDecorator('remark', {\n        rules: []\n      })(React.createElement(TextArea, {\n        style: {\n          maxWidth: 300\n        },\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u91C7\\u8D2D\\u4EBA\\u5458\\u59D3\\u540D:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), getFieldDecorator('user_name', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        wrapperCol: {\n          span: 8,\n          offset: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        icon: \"save\",\n        htmlType: \"submit\",\n        style: {\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        style: {\n          marginLeft: 10,\n          float: \"right\"\n        },\n        icon: \"rollback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"))));\n    }\n  }]);\n\n  return goodsTypeEdit;\n}(Component);\n\nvar goodsTypeAdds = _Form.create()(goodsTypeEdit);\n\nexport default goodsTypeAdds;","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/containers/shop/goodsTypeEdit.js"],"names":["React","Component","NetWork_Post","Option","TextArea","FormItem","Item","goodsTypeEdit","props","_getProTypeDetail","formData","pro_type_id","match","params","id","response","status","data","msg","setState","goodTypeList","history","push","error","_getParentCodeList","handleSubmit","e","preventDefault","form","validateFields","err","values","goBack","state","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","width","rules","required","message","maxWidth","map","i","pro_type_code","pro_type_name","offset","float","marginLeft","goodsTypeAdds","create"],"mappings":"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","sourcesContent":["// -- 绑定供应商\nimport React, { Component } from 'react';\nimport { Form, Select, Button, Input, message } from 'antd'\nimport { NetWork_Post } from '../../network/netUtils'\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\nclass goodsTypeEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            goodTypeList: []\n        }\n    }\n    componentDidMount() {\n        this._getProTypeDetail()\n        this._getParentCodeList()\n    }\n    _getProTypeDetail = () => {\n        const formData = {\n            pro_type_id: this.props.match.params.id\n        }\n        NetWork_Post('getParentCode', formData, (response) => {\n            const { status, data, msg } = response\n            if (status === '0000') {\n                this.setState({\n                    goodTypeList: data.goodTypeList\n                })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    _getParentCodeList = () => {\n        const formData = {\n        }\n        NetWork_Post('getParentCode', formData, (response) => {\n            const { status, data, msg } = response\n            if (status === '0000') {\n                this.setState({\n                    goodTypeList: data.goodTypeList\n                })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (err) return;\n            NetWork_Post('productTypeAdd', values, (response) => {\n                const { status, msg } = response\n                if (status === '0000') {\n                    return this.props.history.goBack();\n                } else {\n                    if (status === '1003') return this.props.history.push('/');\n                    message.error(msg)\n                }\n            });\n        });\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 12 },\n                sm: { span: 3 },\n            },\n            wrapperCol: {\n                xs: { span: 12 },\n                sm: { span: 21 },\n            },\n        };\n        return (\n            <Form onSubmit={this.handleSubmit} style={{ width: '100%' }}>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"父类型编号:\"\n                >\n                    {getFieldDecorator('parent_code', {\n                        rules: [{\n                            required: true, message: '请选择父类型！',\n                        }],\n                    })(\n                        <Select placeholder='请选择' style={{ maxWidth: 300 }}>\n                            {\n                                this.state.goodTypeList.map((e, i) => {\n                                    return <Option key={i} value={e.pro_type_code}>{e.pro_type_name}</Option>\n                                })\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"产品类型编号:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pro_type_code', {\n                        rules: [{\n                            required: true, message: '请输入产品类型编号！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"产品类型名称:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pro_type_name', {\n                        rules: [{\n                            required: true, message: '请输入产品类型名称！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"产品类型备注:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('remark', {\n                        rules: [],\n                    })(\n                        <TextArea style={{ maxWidth: 300 }} rows={4} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"采购人员姓名:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('user_name', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem wrapperCol={{ span: 8, offset: 2 }}>\n                    <div style={{ maxWidth: 300 }}>\n                        <Button icon='save' htmlType=\"submit\" style={{ float: \"left\" }}>\n                            提交\n                        </Button>\n                        <Button onClick={() => { this.props.history.goBack() }} style={{ marginLeft: 10, float: \"right\" }} icon='rollback'>\n                            返回\n                        </Button>\n                    </div>\n                </FormItem>\n            </Form>\n        )\n    }\n}\nconst goodsTypeAdds = Form.create()(goodsTypeEdit)\nexport default goodsTypeAdds"]},"metadata":{},"sourceType":"module"}