{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/jk/Desktop/obj/jkwmsweb/src/containers/warehouse/warehouseEdit.js\";\n// -- 编辑厂商\nimport React, { Component } from 'react';\nimport { NetWork_Post } from '../../network/netUtils';\nvar Option = _Select.Option;\nvar TextArea = _Input.TextArea;\nvar FormItem = _Form.Item;\n\nvar areaList = require('../../components/area.json');\n\nvar warehouseEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(warehouseEdit, _Component);\n\n  function warehouseEdit(props) {\n    var _this;\n\n    _classCallCheck(this, warehouseEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(warehouseEdit).call(this, props));\n\n    _this._getWarehouseDetail = function () {\n      var formData = {\n        id: _this.props.match.params.id\n      };\n      NetWork_Post('warehouseDetail', formData, function (response) {\n        console.log('warehouseDetail', response);\n        var status = response.status,\n            data = response.data,\n            msg = response.msg;\n\n        if (status === '0000') {\n          _this.props.form.setFieldsValue({\n            warehouse_num: data.warehouse_num,\n            warehouse_name: data.warehouse_name,\n            pic_name: data.pic_name,\n            pic_tel: data.pic_tel,\n            pic_mobile: data.pic_mobile,\n            pic_fax: data.pic_fax,\n            pic_qq: data.pic_qq,\n            pic_wechat: data.pic_wechat,\n            pic_email: data.pic_email,\n            province: data.province,\n            city: data.city,\n            area: data.area,\n            address: data.address,\n            receiving_date: data.receiving_date,\n            remark: data.remark\n          });\n\n          _this._getCityList({\n            area_name: data.province\n          });\n\n          _this._getAreaList({\n            area_name: data.city\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this._getProvinceList = function () {\n      var formData = {};\n      NetWork_Post('areaList', formData, function (response) {\n        console.log('areaList', response);\n        var status = response.status,\n            msg = response.msg,\n            data = response.data;\n\n        if (status === '0000') {\n          _this.setState({\n            provinceList: data\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this._getCityList = function (_ref) {\n      var _ref$proviceIndex = _ref.proviceIndex,\n          proviceIndex = _ref$proviceIndex === void 0 ? '' : _ref$proviceIndex,\n          _ref$area_name = _ref.area_name,\n          area_name = _ref$area_name === void 0 ? '' : _ref$area_name;\n      var formData = {\n        area_name: area_name ? area_name : _this.state.provinceList[proviceIndex].area_name,\n        area_level: 1\n      };\n      NetWork_Post('areaList', formData, function (response) {\n        console.log('areaList', response);\n        var status = response.status,\n            msg = response.msg,\n            data = response.data;\n\n        if (status === '0000') {\n          _this.setState({\n            cityList: data\n          }, function () {\n            return _this.props.form.setFieldsValue({\n              city: null,\n              area: null\n            });\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this._getAreaList = function (_ref2) {\n      var _ref2$cityIndex = _ref2.cityIndex,\n          cityIndex = _ref2$cityIndex === void 0 ? '' : _ref2$cityIndex,\n          _ref2$area_name = _ref2.area_name,\n          area_name = _ref2$area_name === void 0 ? '' : _ref2$area_name;\n      var formData = {\n        area_name: _this.state.cityList[cityIndex].area_name,\n        area_level: 2\n      };\n      console.log(formData);\n      NetWork_Post('areaList', formData, function (response) {\n        console.log('areaList', response);\n        var status = response.status,\n            msg = response.msg,\n            data = response.data;\n\n        if (status === '0000') {\n          _this.setState({\n            areaList: data\n          }, function () {\n            return _this.props.form.setFieldsValue({\n              area: null\n            });\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (err) return;\n        values.id = _this.props.match.params.id;\n        NetWork_Post('warehouseEdit', values, function (response) {\n          var status = response.status,\n              msg = response.msg;\n\n          if (status === '0000') {\n            _message.success(msg);\n\n            return _this.props.history.goBack();\n          } else {\n            if (status === '1003') return _this.props.history.push('/');\n\n            _message.error(msg);\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      provinceIndex: null,\n      cityIndex: null,\n      areaIndex: null\n    };\n    return _this;\n  }\n\n  _createClass(warehouseEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._getWarehouseDetail();\n\n      this._getProvinceList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 3\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 21\n          }\n        }\n      };\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u4ED3\\u5E93\\u7F16\\u53F7:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), getFieldDecorator('warehouse_num', {\n        rules: [{\n          required: true,\n          message: '请输入仓库编号！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4ED3\\u5E93\\u540D\\u79F0:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), getFieldDecorator('warehouse_name', {\n        rules: [{\n          required: true,\n          message: '请输入仓库名称！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u59D3\\u540D:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), getFieldDecorator('pic_name', {\n        rules: [{\n          required: true,\n          message: '请输入负责人姓名！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u7535\\u8BDD:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), getFieldDecorator('pic_tel', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u624B\\u673A:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), getFieldDecorator('pic_mobile', {\n        rules: [{\n          required: true,\n          message: '请输入负责人手机！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u4F20\\u771F:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), getFieldDecorator('pic_fax', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBAqq:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), getFieldDecorator('pic_qq', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u5FAE\\u4FE1:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), getFieldDecorator('pic_wechat', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8D1F\\u8D23\\u4EBA\\u90AE\\u7BB1:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), getFieldDecorator('pic_email', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u4ED3\\u5E93\\u6240\\u5728\\u7701:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), getFieldDecorator('province', {\n        rules: [{\n          required: true,\n          message: '请选择仓库所在省！'\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          maxWidth: 300\n        },\n        onChange: this._getCityList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.state.provinceList ? this.state.provinceList.map(function (item, index) {\n        return React.createElement(Option, {\n          key: index,\n          value: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, item.area_name);\n      }) : null))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u4ED3\\u5E93\\u6240\\u5728\\u5E02:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), getFieldDecorator('city', {\n        rules: [{\n          required: true,\n          message: '请选择仓库所在市！'\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          maxWidth: 300\n        },\n        onChange: this._getAreaList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, this.state.cityList ? this.state.cityList.map(function (item, index) {\n        return React.createElement(Option, {\n          key: index,\n          value: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, item.area_name);\n      }) : null))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u4ED3\\u5E93\\u6240\\u5728\\u533A:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), getFieldDecorator('area', {\n        rules: [{\n          required: true,\n          message: '请选择仓库所在区！'\n        }]\n      })(React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u9009\\u62E9\",\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, this.state.areaList ? this.state.areaList.map(function (item, index) {\n        return React.createElement(Option, {\n          key: index,\n          value: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, item.area_name);\n      }) : null))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5177\\u4F53\\u5730\\u5740:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), getFieldDecorator('address', {\n        rules: [{\n          required: true,\n          message: '请输入具体地址！'\n        }]\n      })(React.createElement(TextArea, {\n        style: {\n          maxWidth: 300\n        },\n        rows: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u63A5\\u6536\\u65E5\\u671F:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), getFieldDecorator('receiving_date', {\n        rules: []\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5907\\u6CE8:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), getFieldDecorator('remark', {\n        rules: []\n      })(React.createElement(TextArea, {\n        style: {\n          maxWidth: 300\n        },\n        rows: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        wrapperCol: {\n          span: 8,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        icon: \"save\",\n        htmlType: \"submit\",\n        style: {\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        style: {\n          marginLeft: 10,\n          float: \"right\"\n        },\n        icon: \"rollback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"))));\n    }\n  }]);\n\n  return warehouseEdit;\n}(Component);\n\nexport default _Form.create()(warehouseEdit);","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/containers/warehouse/warehouseEdit.js"],"names":["React","Component","NetWork_Post","Option","TextArea","FormItem","Item","areaList","require","warehouseEdit","props","_getWarehouseDetail","formData","id","match","params","response","console","log","status","data","msg","form","setFieldsValue","warehouse_num","warehouse_name","pic_name","pic_tel","pic_mobile","pic_fax","pic_qq","pic_wechat","pic_email","province","city","area","address","receiving_date","remark","_getCityList","area_name","_getAreaList","history","push","error","_getProvinceList","setState","provinceList","proviceIndex","state","area_level","cityList","cityIndex","handleSubmit","e","preventDefault","validateFields","err","values","success","goBack","provinceIndex","areaIndex","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","width","rules","required","message","maxWidth","map","item","index","offset","float","marginLeft","create"],"mappings":"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","sourcesContent":["// -- 编辑厂商\nimport React, { Component } from 'react';\nimport { Form, Select, Button, Input, message } from 'antd'\nimport { NetWork_Post } from '../../network/netUtils'\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\nconst areaList = require('../../components/area.json')\nclass warehouseEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            provinceIndex: null,\n            cityIndex: null,\n            areaIndex: null\n        }\n    }\n    componentDidMount() {\n        this._getWarehouseDetail()\n        this._getProvinceList()\n    }\n    _getWarehouseDetail = () => {\n        const formData = {\n            id: this.props.match.params.id\n        }\n        NetWork_Post('warehouseDetail', formData, (response) => {\n            console.log('warehouseDetail', response)\n            const { status, data, msg } = response\n            if (status === '0000') {\n                this.props.form.setFieldsValue({\n                    warehouse_num: data.warehouse_num,\n                    warehouse_name: data.warehouse_name,\n                    pic_name: data.pic_name,\n                    pic_tel: data.pic_tel,\n                    pic_mobile: data.pic_mobile,\n                    pic_fax: data.pic_fax,\n                    pic_qq: data.pic_qq,\n                    pic_wechat: data.pic_wechat,\n                    pic_email: data.pic_email,\n                    province: data.province,\n                    city: data.city,\n                    area: data.area,\n                    address: data.address,\n                    receiving_date: data.receiving_date,\n                    remark: data.remark,\n                })\n                this._getCityList({ area_name: data.province })\n                this._getAreaList({ area_name: data.city })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    _getProvinceList = () => {\n        const formData = {\n\n        }\n        NetWork_Post('areaList', formData, (response) => {\n            console.log('areaList', response)\n            const { status, msg, data } = response\n            if (status === '0000') {\n                this.setState({\n                    provinceList: data\n                })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    _getCityList = ({ proviceIndex = '', area_name = '' }) => {\n        const formData = {\n            area_name: area_name ? area_name : this.state.provinceList[proviceIndex].area_name,\n            area_level: 1\n        }\n        NetWork_Post('areaList', formData, (response) => {\n            console.log('areaList', response)\n            const { status, msg, data } = response\n            if (status === '0000') {\n                this.setState(\n                    {\n                        cityList: data\n                    },\n                    () => this.props.form.setFieldsValue({\n                        city: null,\n                        area: null\n                    })\n                )\n\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    _getAreaList = ({ cityIndex = '', area_name = '' }) => {\n        const formData = {\n            area_name: this.state.cityList[cityIndex].area_name,\n            area_level: 2\n        }\n        console.log(formData)\n        NetWork_Post('areaList', formData, (response) => {\n            console.log('areaList', response)\n            const { status, msg, data } = response\n            if (status === '0000') {\n                this.setState(\n                    {\n                        areaList: data\n                    },\n                    () => this.props.form.setFieldsValue({\n                        area: null\n                    })\n                )\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (err) return;\n            values.id = this.props.match.params.id\n            NetWork_Post('warehouseEdit', values, (response) => {\n                const { status, msg } = response\n                if (status === '0000') {\n                    message.success(msg)\n                    return this.props.history.goBack();\n                } else {\n                    if (status === '1003') return this.props.history.push('/');\n                    message.error(msg)\n                }\n            });\n        });\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 12 },\n                sm: { span: 3 },\n            },\n            wrapperCol: {\n                xs: { span: 12 },\n                sm: { span: 21 },\n            },\n        };\n        return (\n            <Form onSubmit={this.handleSubmit} style={{ width: '100%' }}>\n                <FormItem\n                    label=\"仓库编号:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('warehouse_num', {\n                        rules: [{\n                            required: true, message: '请输入仓库编号！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"仓库名称:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('warehouse_name', {\n                        rules: [{\n                            required: true, message: '请输入仓库名称！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人姓名:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_name', {\n                        rules: [{\n                            required: true, message: '请输入负责人姓名！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人电话:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_tel', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人手机:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_mobile', {\n                        rules: [{\n                            required: true, message: '请输入负责人手机！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人传真:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_fax', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人qq:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_qq', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人微信:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_wechat', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"负责人邮箱:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pic_email', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"仓库所在省:\"\n                >\n                    {getFieldDecorator('province', {\n                        rules: [{\n                            required: true, message: '请选择仓库所在省！',\n                        }],\n                    })(\n                        <Select placeholder='请选择' style={{ maxWidth: 300 }} onChange={this._getCityList} >\n                            {\n                                this.state.provinceList ? this.state.provinceList.map((item, index) => (\n                                    <Option key={index} value={index}>{item.area_name}</Option>\n                                )) : null\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"仓库所在市:\"\n                >\n                    {getFieldDecorator('city', {\n                        rules: [{\n                            required: true, message: '请选择仓库所在市！',\n                        }],\n                    })(\n                        <Select placeholder='请选择' style={{ maxWidth: 300 }} onChange={this._getAreaList}>\n                            {\n                                this.state.cityList ? this.state.cityList.map((item, index) => (\n                                    <Option key={index} value={index} >{item.area_name}</Option>\n                                )) : null\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"仓库所在区:\"\n                >\n                    {getFieldDecorator('area', {\n                        rules: [{\n                            required: true, message: '请选择仓库所在区！',\n                        }],\n                    })(\n                        <Select placeholder='请选择' style={{ maxWidth: 300 }}>\n                            {\n                                this.state.areaList ? this.state.areaList.map((item, index) => (\n                                    <Option key={index} value={index}>{item.area_name}</Option>\n                                )) : null\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"具体地址:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('address', {\n                        rules: [{\n                            required: true, message: '请输入具体地址！',\n                        }],\n                    })(\n                        <TextArea style={{ maxWidth: 300 }} rows={3} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"接收日期:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('receiving_date', {\n                        rules: [],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"备注:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('remark', {\n                        rules: [],\n                    })(\n                        <TextArea style={{ maxWidth: 300 }} rows={3} />\n                    )}\n                </FormItem>\n                <FormItem wrapperCol={{ span: 8, offset: 3 }}>\n                    <div style={{ maxWidth: 300 }}>\n                        <Button icon='save' htmlType=\"submit\" style={{ float: \"left\" }}>\n                            提交\n                        </Button>\n                        <Button onClick={() => { this.props.history.goBack() }} style={{ marginLeft: 10, float: \"right\" }} icon='rollback'>\n                            返回\n                        </Button>\n                    </div>\n                </FormItem>\n            </Form>\n        )\n    }\n}\nexport default Form.create()(warehouseEdit)"]},"metadata":{},"sourceType":"module"}