{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar Header = function (_Component) {\n  (0, _inherits3['default'])(Header, _Component);\n\n  function Header(props) {\n    (0, _classCallCheck3['default'])(this, Header);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var value = props.value,\n        format = props.format;\n    _this.state = {\n      str: value && value.format(format) || '',\n      invalid: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3['default'])(Header, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.focusOnOpen) {\n        // Wait one frame for the panel to be positioned before focusing\n        var requestAnimationFrame = window.requestAnimationFrame || window.setTimeout;\n        requestAnimationFrame(function () {\n          _this2.refs.input.focus();\n\n          _this2.refs.input.select();\n        });\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var value = nextProps.value,\n          format = nextProps.format;\n      this.setState({\n        str: value && value.format(format) || '',\n        invalid: false\n      });\n    }\n  }, {\n    key: 'getClearButton',\n    value: function getClearButton() {\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          allowEmpty = _props.allowEmpty,\n          clearIcon = _props.clearIcon;\n\n      if (!allowEmpty) {\n        return null;\n      }\n\n      return _react2['default'].createElement('a', {\n        role: 'button',\n        className: prefixCls + '-clear-btn',\n        title: this.props.clearText,\n        onMouseDown: this.onClear\n      }, clearIcon || _react2['default'].createElement('i', {\n        className: prefixCls + '-clear-btn-icon'\n      }));\n    }\n  }, {\n    key: 'getProtoValue',\n    value: function getProtoValue() {\n      return this.props.value || this.props.defaultOpenValue;\n    }\n  }, {\n    key: 'getInput',\n    value: function getInput() {\n      var _props2 = this.props,\n          prefixCls = _props2.prefixCls,\n          placeholder = _props2.placeholder,\n          inputReadOnly = _props2.inputReadOnly;\n      var _state = this.state,\n          invalid = _state.invalid,\n          str = _state.str;\n      var invalidClass = invalid ? prefixCls + '-input-invalid' : '';\n      return _react2['default'].createElement('input', {\n        className: prefixCls + '-input  ' + invalidClass,\n        ref: 'input',\n        onKeyDown: this.onKeyDown,\n        value: str,\n        placeholder: placeholder,\n        onChange: this.onInputChange,\n        readOnly: !!inputReadOnly\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var prefixCls = this.props.prefixCls;\n      return _react2['default'].createElement('div', {\n        className: prefixCls + '-input-wrap'\n      }, this.getInput(), this.getClearButton());\n    }\n  }]);\n  return Header;\n}(_react.Component);\n\nHeader.propTypes = {\n  format: _propTypes2['default'].string,\n  prefixCls: _propTypes2['default'].string,\n  disabledDate: _propTypes2['default'].func,\n  placeholder: _propTypes2['default'].string,\n  clearText: _propTypes2['default'].string,\n  value: _propTypes2['default'].object,\n  inputReadOnly: _propTypes2['default'].bool,\n  hourOptions: _propTypes2['default'].array,\n  minuteOptions: _propTypes2['default'].array,\n  secondOptions: _propTypes2['default'].array,\n  disabledHours: _propTypes2['default'].func,\n  disabledMinutes: _propTypes2['default'].func,\n  disabledSeconds: _propTypes2['default'].func,\n  onChange: _propTypes2['default'].func,\n  onClear: _propTypes2['default'].func,\n  onEsc: _propTypes2['default'].func,\n  allowEmpty: _propTypes2['default'].bool,\n  defaultOpenValue: _propTypes2['default'].object,\n  currentSelectPanel: _propTypes2['default'].string,\n  focusOnOpen: _propTypes2['default'].bool,\n  onKeyDown: _propTypes2['default'].func,\n  clearIcon: _propTypes2['default'].node\n};\nHeader.defaultProps = {\n  inputReadOnly: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onInputChange = function (event) {\n    var str = event.target.value;\n\n    _this3.setState({\n      str: str\n    });\n\n    var _props3 = _this3.props,\n        format = _props3.format,\n        hourOptions = _props3.hourOptions,\n        minuteOptions = _props3.minuteOptions,\n        secondOptions = _props3.secondOptions,\n        disabledHours = _props3.disabledHours,\n        disabledMinutes = _props3.disabledMinutes,\n        disabledSeconds = _props3.disabledSeconds,\n        onChange = _props3.onChange,\n        allowEmpty = _props3.allowEmpty;\n\n    if (str) {\n      var originalValue = _this3.props.value;\n\n      var value = _this3.getProtoValue().clone();\n\n      var parsed = (0, _moment2['default'])(str, format, true);\n\n      if (!parsed.isValid()) {\n        _this3.setState({\n          invalid: true\n        });\n\n        return;\n      }\n\n      value.hour(parsed.hour()).minute(parsed.minute()).second(parsed.second()); // if time value not allowed, response warning.\n\n      if (hourOptions.indexOf(value.hour()) < 0 || minuteOptions.indexOf(value.minute()) < 0 || secondOptions.indexOf(value.second()) < 0) {\n        _this3.setState({\n          invalid: true\n        });\n\n        return;\n      } // if time value is disabled, response warning.\n\n\n      var disabledHourOptions = disabledHours();\n      var disabledMinuteOptions = disabledMinutes(value.hour());\n      var disabledSecondOptions = disabledSeconds(value.hour(), value.minute());\n\n      if (disabledHourOptions && disabledHourOptions.indexOf(value.hour()) >= 0 || disabledMinuteOptions && disabledMinuteOptions.indexOf(value.minute()) >= 0 || disabledSecondOptions && disabledSecondOptions.indexOf(value.second()) >= 0) {\n        _this3.setState({\n          invalid: true\n        });\n\n        return;\n      }\n\n      if (originalValue) {\n        if (originalValue.hour() !== value.hour() || originalValue.minute() !== value.minute() || originalValue.second() !== value.second()) {\n          // keep other fields for rc-calendar\n          var changedValue = originalValue.clone();\n          changedValue.hour(value.hour());\n          changedValue.minute(value.minute());\n          changedValue.second(value.second());\n          onChange(changedValue);\n        }\n      } else if (originalValue !== value) {\n        onChange(value);\n      }\n    } else if (allowEmpty) {\n      onChange(null);\n    } else {\n      _this3.setState({\n        invalid: true\n      });\n\n      return;\n    }\n\n    _this3.setState({\n      invalid: false\n    });\n  };\n\n  this.onKeyDown = function (e) {\n    var _props4 = _this3.props,\n        onEsc = _props4.onEsc,\n        onKeyDown = _props4.onKeyDown;\n\n    if (e.keyCode === 27) {\n      onEsc();\n    }\n\n    onKeyDown(e);\n  };\n\n  this.onClear = function () {\n    _this3.setState({\n      str: ''\n    });\n\n    _this3.props.onClear();\n  };\n};\n\nexports['default'] = Header;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}