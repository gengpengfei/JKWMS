{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jk/Desktop/obj/jkwmsweb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/jk/Desktop/obj/jkwmsweb/src/containers/shop/proFruitEdit.js\";\n// -- 商品转换编辑\nimport React, { Component } from 'react';\nimport { NetWork_Post } from '../../network/netUtils';\nvar FormItem = _Form.Item;\nvar TextArea = _Input.TextArea;\n\nvar proFruitEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(proFruitEdit, _Component);\n\n  function proFruitEdit(props) {\n    var _this;\n\n    _classCallCheck(this, proFruitEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(proFruitEdit).call(this, props));\n\n    _this._getProFruitDetail = function () {\n      var formData = {\n        id: _this.props.match.params.id\n      };\n      NetWork_Post('proFruitDetail', formData, function (response) {\n        var status = response.status,\n            data = response.data,\n            msg = response.msg;\n\n        if (status === '0000') {\n          _this.setState({\n            proFruitDetail: data\n          });\n\n          _this.props.form.setFieldsValue({\n            pro_code: data.pro_code,\n            pro_name: data.pro_name,\n            pro_code_mix: data.pro_code_mix,\n            pro_name_mix: data.pro_name_mix,\n            remark: data.remark,\n            times: data.times\n          });\n        } else {\n          if (status === '1003') return _this.props.history.push('/');\n\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (err) return;\n        values.id = _this.props.match.params.id;\n        NetWork_Post('proFruitEdit', values, function (response) {\n          var status = response.status,\n              msg = response.msg;\n\n          if (status === '0000') {\n            _message.success(msg);\n\n            return _this.props.history.goBack();\n          } else {\n            if (status === '1003') return _this.props.history.push('/');\n\n            _message.error(msg);\n          }\n        });\n      });\n    };\n\n    _this._checkTimes = function () {\n      var _this$state = _this.state,\n          weight = _this$state.weight,\n          number = _this$state.number;\n\n      if (!weight || !number) {\n        _message.error('请输入正确的单果重量和数量');\n      }\n\n      var times = parseFloat(weight) * parseFloat(number);\n\n      _this.props.form.setFieldsValue({\n        times: times\n      });\n    };\n\n    _this.state = {\n      proFruitDetail: []\n    };\n    return _this;\n  }\n\n  _createClass(proFruitEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //-- 获取商品转换详情\n      this._getProFruitDetail();\n\n      this.props.form.setFieldsValue({\n        pro_code: this.props.match.params.pro_code\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 3\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 21\n          }\n        }\n      };\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u5355\\u4E00\\u5546\\u54C1\\u7F16\\u7801:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), getFieldDecorator('pro_code', {\n        rules: [{\n          required: true,\n          message: '请输入商品编号！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5355\\u4E00\\u5546\\u54C1\\u540D\\u79F0:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), getFieldDecorator('pro_name', {\n        rules: [{\n          required: true,\n          message: '请输入商品名称！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u7EC4\\u5408\\u5546\\u54C1\\u7F16\\u7801:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), getFieldDecorator('pro_code_mix', {\n        rules: [{\n          required: true,\n          message: '请输入组合商品编号！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u7EC4\\u5408\\u5546\\u54C1\\u540D\\u79F0:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), getFieldDecorator('pro_name_mix', {\n        rules: [{\n          required: true,\n          message: '请输入组合商品名称！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u8F6C\\u6362\\u540E\\u7684\\u89C4\\u683C:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), getFieldDecorator('times', {\n        rules: [{\n          required: true,\n          message: '输入单位和规格后点击计算！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        wrapperCol: {\n          span: 8,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\u5355\\u679C\\uFF1A\", React.createElement(_Input, {\n        type: \"number\",\n        style: {\n          maxWidth: 70\n        },\n        onChange: function onChange(_ref) {\n          var target = _ref.target;\n          return _this2.setState({\n            weight: target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \" /kg  \", React.createElement(_Input, {\n        style: {\n          maxWidth: 70\n        },\n        type: \"number\",\n        onChange: function onChange(_ref2) {\n          var target = _ref2.target;\n          return _this2.setState({\n            number: target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \" \\u4E2A \", React.createElement(_Button, {\n        onClick: this._checkTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\u8BA1\\u7B97\")), React.createElement(FormItem, Object.assign({\n        label: \"\\u5907\\u6CE8:\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), getFieldDecorator('remark', {\n        rules: []\n      })(React.createElement(TextArea, {\n        style: {\n          maxWidth: 300\n        },\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        wrapperCol: {\n          span: 8,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          maxWidth: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        icon: \"save\",\n        htmlType: \"submit\",\n        style: {\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        style: {\n          marginLeft: 10,\n          float: \"right\"\n        },\n        icon: \"rollback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"))));\n    }\n  }]);\n\n  return proFruitEdit;\n}(Component);\n\nexport default _Form.create()(proFruitEdit);","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/containers/shop/proFruitEdit.js"],"names":["React","Component","NetWork_Post","FormItem","Item","TextArea","proFruitEdit","props","_getProFruitDetail","formData","id","match","params","response","status","data","msg","setState","proFruitDetail","form","setFieldsValue","pro_code","pro_name","pro_code_mix","pro_name_mix","remark","times","history","push","error","handleSubmit","e","preventDefault","validateFields","err","values","success","goBack","_checkTimes","state","weight","number","parseFloat","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","width","rules","required","message","maxWidth","offset","target","value","float","marginLeft","create"],"mappings":"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","sourcesContent":["// -- 商品转换编辑\nimport React, { Component } from 'react';\nimport { Form, Button, Input, message } from 'antd'\nimport { NetWork_Post } from '../../network/netUtils'\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nclass proFruitEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            proFruitDetail: []\n        }\n    }\n    componentDidMount() {\n        //-- 获取商品转换详情\n        this._getProFruitDetail()\n        this.props.form.setFieldsValue({\n            pro_code: this.props.match.params.pro_code,\n        })\n    }\n    _getProFruitDetail = () => {\n        const formData = {\n            id: this.props.match.params.id\n        }\n        NetWork_Post('proFruitDetail', formData, (response) => {\n            const { status, data, msg } = response\n            if (status === '0000') {\n                this.setState({\n                    proFruitDetail: data\n                })\n                this.props.form.setFieldsValue({\n                    pro_code: data.pro_code,\n                    pro_name: data.pro_name,\n                    pro_code_mix: data.pro_code_mix,\n                    pro_name_mix: data.pro_name_mix,\n                    remark: data.remark,\n                    times: data.times\n                })\n            } else {\n                if (status === '1003') return this.props.history.push('/');\n                message.error(msg)\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (err) return;\n            values.id = this.props.match.params.id\n            NetWork_Post('proFruitEdit', values, (response) => {\n                const { status, msg } = response\n                if (status === '0000') {\n                    message.success(msg)\n                    return this.props.history.goBack();\n                } else {\n                    if (status === '1003') return this.props.history.push('/');\n                    message.error(msg)\n                }\n            });\n        });\n    }\n    //-- 计算规格\n    _checkTimes = () => {\n        const { weight, number } = this.state;\n        if (!weight || !number) {\n            message.error('请输入正确的单果重量和数量')\n        }\n        const times = parseFloat(weight) * parseFloat(number)\n        this.props.form.setFieldsValue({\n            times: times\n        })\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 12 },\n                sm: { span: 3 },\n            },\n            wrapperCol: {\n                xs: { span: 12 },\n                sm: { span: 21 },\n            },\n        };\n        return (\n            <Form onSubmit={this.handleSubmit} style={{ width: '100%' }}>\n                <FormItem\n                    label=\"单一商品编码:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pro_code', {\n                        rules: [{\n                            required: true, message: '请输入商品编号！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"单一商品名称:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pro_name', {\n                        rules: [{\n                            required: true, message: '请输入商品名称！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"组合商品编码:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pro_code_mix', {\n                        rules: [{\n                            required: true, message: '请输入组合商品编号！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"组合商品名称:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('pro_name_mix', {\n                        rules: [{\n                            required: true, message: '请输入组合商品名称！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"转换后的规格:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('times', {\n                        rules: [{\n                            required: true, message: '输入单位和规格后点击计算！',\n                        }],\n                    })(\n                        <Input style={{ maxWidth: 300 }} />\n                    )}\n                </FormItem>\n                <FormItem wrapperCol={{ span: 8, offset: 3 }}>\n                    单果：<Input type='number' style={{ maxWidth: 70 }} onChange={({ target }) => this.setState({ weight: target.value })} /> /kg  <Input style={{ maxWidth: 70 }} type='number' onChange={({ target }) => this.setState({ number: target.value })} /> 个 <Button onClick={this._checkTimes}>计算</Button>\n                </FormItem>\n                <FormItem\n                    label=\"备注:\"\n                    {...formItemLayout}\n                >\n                    {getFieldDecorator('remark', {\n                        rules: [],\n                    })(\n                        <TextArea style={{ maxWidth: 300 }} rows={4} />\n                    )}\n                </FormItem>\n                <FormItem wrapperCol={{ span: 8, offset: 3 }}>\n                    <div style={{ maxWidth: 300 }}>\n                        <Button icon='save' htmlType=\"submit\" style={{ float: \"left\" }}>\n                            提交\n                        </Button>\n                        <Button onClick={() => { this.props.history.goBack() }} style={{ marginLeft: 10, float: \"right\" }} icon='rollback'>\n                            返回\n                        </Button>\n                    </div>\n                </FormItem>\n            </Form>\n        )\n    }\n}\nexport default Form.create()(proFruitEdit)"]},"metadata":{},"sourceType":"module"}