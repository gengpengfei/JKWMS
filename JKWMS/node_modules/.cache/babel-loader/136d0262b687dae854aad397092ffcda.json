{"ast":null,"code":"var CryptoJS = require(\"crypto-js\");\n\nexport var BASEURL = 'http://10.20.10.81:8877/';\nvar reqUrl = {\n  //-- 登录模块\n  login: BASEURL + 'api/Product/productList',\n  //-- 用户登录\n  //-- 商品模块\n  getGoodsList: BASEURL + 'api/Product/productList',\n  //-- 商品列表\n  productExport: BASEURL + 'api/Product/productExport',\n  //-- 商品导出  \n  productDownload: BASEURL + 'api/Product/productDownload',\n  //-- 商品导入模版下载\n  productImport: BASEURL + 'api/Product/productImport',\n  //-- 商品信息导入\n  productVenDownload: BASEURL + 'api/Product/venProDownload',\n  //-- 商品供应商关系模版下载\n  productVenImport: BASEURL + 'api/Product/venProImport',\n  //-- 商品供应商关系导入\n  productDetail: BASEURL + 'api/Product/productDetail',\n  //-- 商品详情\n  productVendorList: BASEURL + 'api/Product/vendor',\n  //-- 供应商列表\n  productBindVendor: BASEURL + 'api/Product/vendorGood',\n  //-- 绑定供应商\n  //-- 商品类型模块\n  getGoodsTypeList: BASEURL + 'api/ProductType/index',\n  //-- 商品分类列表\n  getParentCode: BASEURL + 'api/ProductType/parentCode',\n  //-- 父类型列表\n  productTypeAdd: BASEURL + 'api/ProductType/productTypeAdd',\n  //-- 添加商品分类列表\n  productTypeDel: BASEURL + 'api/ProductType/proTypeDel',\n  //-- 删除商品分类\n  proTypeDetail: BASEURL + 'api/ProductType/proTypeDetail',\n  //-- 获取商品分类详情\n  productTypeEdit: BASEURL + 'api/ProductType/productTypeEdit',\n  //-- 编辑商品分类详情\n  proTypeDownload: BASEURL + 'api/ProductType/proTypeDownload',\n  //-- 商品分类导入模版下载\n  proTypeImport: BASEURL + 'api/ProductType/proTypeImport',\n  //-- 文件上传\n  //-- 不推送库存管理模块\n  proExcludeList: BASEURL + 'api/ProExclude/index',\n  //-- 不推送库存商品列表\n  proExcludeDel: BASEURL + 'api/ProExclude/proExcludeDel',\n  //-- 不推送库存商品删除\n  proExcludeAdd: BASEURL + 'api/ProExclude/proExcludeAdd',\n  //-- 不推送库存商品添加\n  proExcludeEdit: BASEURL + 'api/ProExclude/proExcludeEdit',\n  //-- 不推送库存商品编辑\n  //-- 商品转换管理模块\n  proFruitList: BASEURL + 'api/ProFruit/index',\n  //-- 商品转换管理\n  proFruitDetail: BASEURL + 'api/ProFruit/proFruitDetail',\n  //-- 商品转换详情\n  proFruitDel: BASEURL + 'api/ProFruit/proFruitDel',\n  //-- 商品转换管理删除\n  proFruitAdd: BASEURL + 'api/ProFruit/proFruitAdd',\n  //-- 商品转换管理添加\n  proFruitEdit: BASEURL + 'api/ProFruit/proFruitEdit',\n  //-- 商品转换管理编辑\n  //-- 商品下架申请模块\n  proOfflineList: BASEURL + 'api/ProOffline/index',\n  //-- 商品下架申请列表\n  proOfflineDel: BASEURL + 'api/ProOffline/delete',\n  //-- 商品下架申请删除\n  proApplyUnder: BASEURL + 'api/ProOffline/applyUnder',\n  //-- 商品申请下架\n  proOfflineReviewed: BASEURL + 'api/ProOffline/reviewed',\n  //-- 商下架申请通过\n  proOfflineRefuse: BASEURL + 'api/ProOffline/refuse',\n  //-- 商下架申请拒绝\n  //-- 厂商管理模块\n  getVendorList: BASEURL + 'api/Vendor/index',\n  //-- 厂商列表\n  vendorAdd: BASEURL + 'api/Vendor/vendorAdd',\n  //-- 厂商添加  \n  vendorEdit: BASEURL + 'api/Vendor/vendorEdit',\n  //-- 厂商编辑 \n  vendorDel: BASEURL + 'api/Vendor/vendorDel',\n  //-- 厂商删除  \n  vendorDetail: BASEURL + 'api/Vendor/vendorDetail',\n  //-- 厂商详情\n  vendorProduct: BASEURL + 'api/Vendor/Product',\n  //-- 商品列表\n  vendorBindedProduct: BASEURL + 'api/Vendor/vendorProduct',\n  //-- 厂商绑定商品列表\n  vendorBindProduct: BASEURL + 'api/Vendor/vendorGood',\n  //-- 绑定商品\n  vendorDownload: BASEURL + 'api/Vendor/vendorDownload',\n  //-- 厂商信息导入模版下载\n  vendorImport: BASEURL + 'api/Vendor/vendorImport',\n  //-- 厂商信息导入\n  vendorBindProductDownload: BASEURL + 'api/Vendor/venProDownload',\n  //-- 厂商绑定商品模版下载\n  VendorBindProductImport: BASEURL + 'api/Vendor/venProImport' //-- 厂商绑定商品导入\n\n  /*** 对请求数据进行加密*/\n\n};\n\nfunction serviceRequestEncryption(bodyData) {\n  var preKey = '87749CECEA24B1C314CC27CF7952EBC3'; //Md5加密（32位大写）\n\n  var objKeys = Object.keys(bodyData);\n  objKeys.sort(); //排序\n\n  var signStr = '';\n  objKeys.forEach(function (item) {\n    signStr = signStr + bodyData[item];\n  });\n  signStr = signStr + preKey;\n  var md51 = CryptoJS.MD5(signStr).toString();\n  var md51Super = md51.toUpperCase();\n  md51Super = md51Super.substring(2, 18);\n  var md52 = CryptoJS.MD5(md51Super).toString();\n  bodyData['sign'] = md52.toUpperCase();\n  return bodyData;\n}\n\nexport function NetWork_Post(net_api, bodyData, callback, netOptions) {\n  // 加密\n  // bodyData = serviceRequestEncryption(bodyData);\n  var opt_headers, opt_error;\n\n  if (typeof netOptions === 'object') {\n    opt_headers = netOptions['headers'];\n    opt_error = netOptions['error'];\n  }\n\n  ;\n  var post_header = opt_headers ? opt_headers : {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  var post_error = opt_error ? opt_error : {\n    status: '1004',\n    msg: '网络延时，请稍后重试！'\n  };\n  var url = reqUrl[net_api];\n  var fetchOptions = {\n    method: 'POST',\n    mode: 'cors',\n    headers: post_header,\n    body: JSON.stringify(bodyData) // body: bodyData,\n\n  };\n  fetch(url, fetchOptions).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData); //回调\n  }).catch(function (error) {\n    callback(post_error);\n  });\n}\nexport function NetWork_Get(net_api, callback, netOptions) {\n  var url = reqUrl[net_api];\n  var opt_error;\n\n  if (typeof netOptions === 'object') {\n    opt_error = netOptions['error'];\n  }\n\n  ;\n  var get_error = opt_error ? opt_error : {\n    status: '-1',\n    msg: '请求失败'\n  };\n  fetch(url, {\n    method: 'GET',\n    credentials: 'include'\n  }).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData);\n  }).catch(function (error) {\n    callback(get_error);\n  });\n}\n;\nexport function NetWork_File(net_api, bodyData, callback) {\n  // 加密\n  // bodyData = serviceRequestEncryption(bodyData);\n  var post_header = {};\n  var post_error = {\n    status: '1004',\n    msg: '网络延时，请稍后重试！'\n  };\n  var url = reqUrl[net_api];\n  var fetchOptions = {\n    method: 'POST',\n    mode: 'cors',\n    headers: post_header,\n    body: bodyData\n  };\n  fetch(url, fetchOptions).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData); //回调\n  }).catch(function (error) {\n    callback(post_error);\n  });\n}","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/network/netUtils.js"],"names":["CryptoJS","require","BASEURL","reqUrl","login","getGoodsList","productExport","productDownload","productImport","productVenDownload","productVenImport","productDetail","productVendorList","productBindVendor","getGoodsTypeList","getParentCode","productTypeAdd","productTypeDel","proTypeDetail","productTypeEdit","proTypeDownload","proTypeImport","proExcludeList","proExcludeDel","proExcludeAdd","proExcludeEdit","proFruitList","proFruitDetail","proFruitDel","proFruitAdd","proFruitEdit","proOfflineList","proOfflineDel","proApplyUnder","proOfflineReviewed","proOfflineRefuse","getVendorList","vendorAdd","vendorEdit","vendorDel","vendorDetail","vendorProduct","vendorBindedProduct","vendorBindProduct","vendorDownload","vendorImport","vendorBindProductDownload","VendorBindProductImport","serviceRequestEncryption","bodyData","preKey","objKeys","Object","keys","sort","signStr","forEach","item","md51","MD5","toString","md51Super","toUpperCase","substring","md52","NetWork_Post","net_api","callback","netOptions","opt_headers","opt_error","post_header","post_error","status","msg","url","fetchOptions","method","mode","headers","body","JSON","stringify","fetch","then","response","text","responseText","responseData","parse","catch","error","NetWork_Get","get_error","credentials","NetWork_File"],"mappings":"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","sourcesContent":["let CryptoJS = require(\"crypto-js\");\nexport const BASEURL = 'http://10.20.10.81:8877/';\nvar reqUrl = {\n    //-- 登录模块\n    login: BASEURL + 'api/Product/productList',  //-- 用户登录\n    //-- 商品模块\n    getGoodsList: BASEURL + 'api/Product/productList',  //-- 商品列表\n    productExport: BASEURL + 'api/Product/productExport',//-- 商品导出  \n    productDownload: BASEURL + 'api/Product/productDownload',//-- 商品导入模版下载\n    productImport: BASEURL + 'api/Product/productImport',//-- 商品信息导入\n    productVenDownload: BASEURL + 'api/Product/venProDownload',//-- 商品供应商关系模版下载\n    productVenImport: BASEURL + 'api/Product/venProImport',//-- 商品供应商关系导入\n    productDetail: BASEURL + 'api/Product/productDetail',  //-- 商品详情\n    productVendorList: BASEURL + 'api/Product/vendor',//-- 供应商列表\n    productBindVendor: BASEURL + 'api/Product/vendorGood',//-- 绑定供应商\n\n    //-- 商品类型模块\n    getGoodsTypeList: BASEURL + 'api/ProductType/index',  //-- 商品分类列表\n    getParentCode: BASEURL + 'api/ProductType/parentCode', //-- 父类型列表\n    productTypeAdd: BASEURL + 'api/ProductType/productTypeAdd', //-- 添加商品分类列表\n    productTypeDel: BASEURL + 'api/ProductType/proTypeDel', //-- 删除商品分类\n    proTypeDetail: BASEURL + 'api/ProductType/proTypeDetail',//-- 获取商品分类详情\n    productTypeEdit: BASEURL + 'api/ProductType/productTypeEdit',//-- 编辑商品分类详情\n    proTypeDownload: BASEURL + 'api/ProductType/proTypeDownload',//-- 商品分类导入模版下载\n    proTypeImport: BASEURL + 'api/ProductType/proTypeImport', //-- 文件上传\n\n    //-- 不推送库存管理模块\n    proExcludeList: BASEURL + 'api/ProExclude/index', //-- 不推送库存商品列表\n    proExcludeDel: BASEURL + 'api/ProExclude/proExcludeDel', //-- 不推送库存商品删除\n    proExcludeAdd: BASEURL + 'api/ProExclude/proExcludeAdd', //-- 不推送库存商品添加\n    proExcludeEdit: BASEURL + 'api/ProExclude/proExcludeEdit', //-- 不推送库存商品编辑\n\n    //-- 商品转换管理模块\n    proFruitList: BASEURL + 'api/ProFruit/index', //-- 商品转换管理\n    proFruitDetail: BASEURL + 'api/ProFruit/proFruitDetail', //-- 商品转换详情\n    proFruitDel: BASEURL + 'api/ProFruit/proFruitDel', //-- 商品转换管理删除\n    proFruitAdd: BASEURL + 'api/ProFruit/proFruitAdd', //-- 商品转换管理添加\n    proFruitEdit: BASEURL + 'api/ProFruit/proFruitEdit', //-- 商品转换管理编辑\n\n    //-- 商品下架申请模块\n    proOfflineList: BASEURL + 'api/ProOffline/index', //-- 商品下架申请列表\n    proOfflineDel: BASEURL + 'api/ProOffline/delete', //-- 商品下架申请删除\n    proApplyUnder: BASEURL + 'api/ProOffline/applyUnder', //-- 商品申请下架\n    proOfflineReviewed: BASEURL + 'api/ProOffline/reviewed', //-- 商下架申请通过\n    proOfflineRefuse: BASEURL + 'api/ProOffline/refuse', //-- 商下架申请拒绝\n\n    //-- 厂商管理模块\n    getVendorList: BASEURL + 'api/Vendor/index',  //-- 厂商列表\n    vendorAdd: BASEURL + 'api/Vendor/vendorAdd',//-- 厂商添加  \n    vendorEdit: BASEURL + 'api/Vendor/vendorEdit',//-- 厂商编辑 \n    vendorDel: BASEURL + 'api/Vendor/vendorDel',//-- 厂商删除  \n    vendorDetail: BASEURL + 'api/Vendor/vendorDetail',  //-- 厂商详情\n    vendorProduct: BASEURL + 'api/Vendor/Product',  //-- 商品列表\n    vendorBindedProduct: BASEURL + 'api/Vendor/vendorProduct',  //-- 厂商绑定商品列表\n    vendorBindProduct: BASEURL + 'api/Vendor/vendorGood',//-- 绑定商品\n    vendorDownload: BASEURL + 'api/Vendor/vendorDownload',//-- 厂商信息导入模版下载\n    vendorImport: BASEURL + 'api/Vendor/vendorImport',//-- 厂商信息导入\n    vendorBindProductDownload: BASEURL + 'api/Vendor/venProDownload',//-- 厂商绑定商品模版下载\n    VendorBindProductImport: BASEURL + 'api/Vendor/venProImport',//-- 厂商绑定商品导入\n}\n/*** 对请求数据进行加密*/\nfunction serviceRequestEncryption(bodyData) {\n    let preKey = '87749CECEA24B1C314CC27CF7952EBC3'; //Md5加密（32位大写）\n    let objKeys = Object.keys(bodyData);\n    objKeys.sort(); //排序\n\n    let signStr = '';\n    objKeys.forEach(item => {\n        signStr = signStr + bodyData[item];\n    });\n    signStr = signStr + preKey;\n\n    let md51 = CryptoJS.MD5(signStr).toString();\n    let md51Super = md51.toUpperCase();\n\n    md51Super = md51Super.substring(2, 18);\n    let md52 = CryptoJS.MD5(md51Super).toString();\n\n    bodyData['sign'] = md52.toUpperCase();\n    return bodyData;\n}\n\nexport function NetWork_Post(net_api, bodyData, callback, netOptions) {\n    // 加密\n    // bodyData = serviceRequestEncryption(bodyData);\n    let opt_headers, opt_error;\n    if (typeof netOptions === 'object') {\n        opt_headers = netOptions['headers'];\n        opt_error = netOptions['error'];\n    };\n\n    let post_header = opt_headers ? opt_headers : {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    };\n\n    let post_error = opt_error ? opt_error : {\n        status: '1004',\n        msg: '网络延时，请稍后重试！',\n    };\n    let url = reqUrl[net_api];\n    let fetchOptions = {\n        method: 'POST',\n        mode: 'cors',\n        headers: post_header,\n        body: JSON.stringify(bodyData),\n        // body: bodyData,\n    }\n    fetch(url, fetchOptions)\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);//回调\n        })\n        .catch(error => {\n            callback(post_error);\n        });\n\n}\n\nexport function NetWork_Get(net_api, callback, netOptions) {\n\n    let url = reqUrl[net_api];\n    let opt_error;\n\n    if (typeof netOptions === 'object') {\n        opt_error = netOptions['error'];\n    };\n\n    let get_error = opt_error ? opt_error : {\n        status: '-1',\n        msg: '请求失败',\n    };\n\n    fetch(url, {\n        method: 'GET',\n        credentials: 'include'\n    })\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);\n        })\n        .catch((error) => {\n            callback(get_error);\n        });\n};\n\nexport function NetWork_File(net_api, bodyData, callback) {\n    // 加密\n    // bodyData = serviceRequestEncryption(bodyData);\n    let post_header = {};\n    let post_error = {\n        status: '1004',\n        msg: '网络延时，请稍后重试！',\n    };\n    let url = reqUrl[net_api];\n    let fetchOptions = {\n        method: 'POST',\n        mode: 'cors',\n        headers: post_header,\n        body: bodyData,\n    }\n    fetch(url, fetchOptions)\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);//回调\n        })\n        .catch(error => {\n            callback(post_error);\n        });\n\n}"]},"metadata":{},"sourceType":"module"}