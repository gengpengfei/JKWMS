{"ast":null,"code":"var CryptoJS = require(\"crypto-js\");\n\nexport var BASEURL = 'http://10.20.10.81:8877/';\nvar reqUrl = {\n  getGoodsTypeList: BASEURL + 'api/ProductType/index',\n  //-- 商品分类列表\n  getParentCode: BASEURL + 'api/ProductType/parentCode',\n  //-- 父类型列表\n  productTypeAdd: BASEURL + 'api/ProductType/productTypeAdd',\n  //-- 添加商品分类列表\n  productTypeDel: BASEURL + 'api/ProductType/proTypeDel',\n  //-- 删除商品分类\n  proTypeDetail: BASEURL + 'api/ProductType/proTypeDetail',\n  //-- 获取商品分类详情\n  productTypeEdit: BASEURL + 'api/ProductType/productTypeEdit',\n  //-- 编辑商品分类详情\n  proTypeDownload: BASEURL + 'api/ProductType/proTypeDownload',\n  //-- 商品分类导入模版下载\n  proTypeImport: BASEURL + 'api/ProductType/proTypeImport' //-- 文件上传\n\n  /*** 对请求数据进行加密*/\n\n};\n\nfunction serviceRequestEncryption(bodyData) {\n  var preKey = '87749CECEA24B1C314CC27CF7952EBC3'; //Md5加密（32位大写）\n\n  var objKeys = Object.keys(bodyData);\n  objKeys.sort(); //排序\n\n  var signStr = '';\n  objKeys.forEach(function (item) {\n    signStr = signStr + bodyData[item];\n  });\n  signStr = signStr + preKey;\n  var md51 = CryptoJS.MD5(signStr).toString();\n  var md51Super = md51.toUpperCase();\n  md51Super = md51Super.substring(2, 18);\n  var md52 = CryptoJS.MD5(md51Super).toString();\n  bodyData['sign'] = md52.toUpperCase();\n  return bodyData;\n}\n\nexport function NetWork_Post(net_api, bodyData, callback, netOptions) {\n  // 加密\n  // bodyData = serviceRequestEncryption(bodyData);\n  var opt_headers, opt_error;\n\n  if (typeof netOptions === 'object') {\n    opt_headers = netOptions['headers'];\n    opt_error = netOptions['error'];\n  }\n\n  ;\n  var post_header = opt_headers ? opt_headers : {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  var post_error = opt_error ? opt_error : {\n    status: '1004',\n    msg: '网络延时，请稍后重试！'\n  };\n  var url = reqUrl[net_api];\n  var fetchOptions = {\n    method: 'POST',\n    mode: 'cors',\n    headers: post_header,\n    body: JSON.stringify(bodyData) // body: bodyData,\n\n  };\n  fetch(url, fetchOptions).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData); //回调\n  }).catch(function (error) {\n    callback(post_error);\n  });\n}\nexport function NetWork_Get(net_api, callback, netOptions) {\n  var url = reqUrl[net_api];\n  var opt_error;\n\n  if (typeof netOptions === 'object') {\n    opt_error = netOptions['error'];\n  }\n\n  ;\n  var get_error = opt_error ? opt_error : {\n    status: '-1',\n    msg: '请求失败'\n  };\n  fetch(url, {\n    method: 'GET',\n    credentials: 'include'\n  }).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData);\n  }).catch(function (error) {\n    callback(get_error);\n  });\n}\n;","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/network/netUtils.js"],"names":["CryptoJS","require","BASEURL","reqUrl","getGoodsTypeList","getParentCode","productTypeAdd","productTypeDel","proTypeDetail","productTypeEdit","proTypeDownload","proTypeImport","serviceRequestEncryption","bodyData","preKey","objKeys","Object","keys","sort","signStr","forEach","item","md51","MD5","toString","md51Super","toUpperCase","substring","md52","NetWork_Post","net_api","callback","netOptions","opt_headers","opt_error","post_header","post_error","status","msg","url","fetchOptions","method","mode","headers","body","JSON","stringify","fetch","then","response","text","responseText","responseData","parse","catch","error","NetWork_Get","get_error","credentials"],"mappings":"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","sourcesContent":["let CryptoJS = require(\"crypto-js\");\nexport const BASEURL = 'http://10.20.10.81:8877/';\nvar reqUrl = {\n    getGoodsTypeList: BASEURL + 'api/ProductType/index',  //-- 商品分类列表\n    getParentCode: BASEURL + 'api/ProductType/parentCode', //-- 父类型列表\n    productTypeAdd: BASEURL + 'api/ProductType/productTypeAdd', //-- 添加商品分类列表\n    productTypeDel: BASEURL + 'api/ProductType/proTypeDel', //-- 删除商品分类\n    proTypeDetail: BASEURL + 'api/ProductType/proTypeDetail',//-- 获取商品分类详情\n    productTypeEdit: BASEURL + 'api/ProductType/productTypeEdit',//-- 编辑商品分类详情\n    proTypeDownload: BASEURL + 'api/ProductType/proTypeDownload',//-- 商品分类导入模版下载\n    proTypeImport: BASEURL + 'api/ProductType/proTypeImport' //-- 文件上传\n}\n/*** 对请求数据进行加密*/\nfunction serviceRequestEncryption(bodyData) {\n    let preKey = '87749CECEA24B1C314CC27CF7952EBC3'; //Md5加密（32位大写）\n    let objKeys = Object.keys(bodyData);\n    objKeys.sort(); //排序\n\n    let signStr = '';\n    objKeys.forEach(item => {\n        signStr = signStr + bodyData[item];\n    });\n    signStr = signStr + preKey;\n\n    let md51 = CryptoJS.MD5(signStr).toString();\n    let md51Super = md51.toUpperCase();\n\n    md51Super = md51Super.substring(2, 18);\n    let md52 = CryptoJS.MD5(md51Super).toString();\n\n    bodyData['sign'] = md52.toUpperCase();\n    return bodyData;\n}\nexport function NetWork_Post(net_api, bodyData, callback, netOptions) {\n    // 加密\n    // bodyData = serviceRequestEncryption(bodyData);\n    let opt_headers, opt_error;\n    if (typeof netOptions === 'object') {\n        opt_headers = netOptions['headers'];\n        opt_error = netOptions['error'];\n    };\n\n    let post_header = opt_headers ? opt_headers : {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    };\n\n    let post_error = opt_error ? opt_error : {\n        status: '1004',\n        msg: '网络延时，请稍后重试！',\n    };\n    let url = reqUrl[net_api];\n    let fetchOptions = {\n        method: 'POST',\n        mode: 'cors',\n        headers: post_header,\n        body: JSON.stringify(bodyData),\n        // body: bodyData,\n    }\n    fetch(url, fetchOptions)\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);//回调\n        })\n        .catch(error => {\n            callback(post_error);\n        });\n\n}\n\nexport function NetWork_Get(net_api, callback, netOptions) {\n\n    let url = reqUrl[net_api];\n    let opt_error;\n\n    if (typeof netOptions === 'object') {\n        opt_error = netOptions['error'];\n    };\n\n    let get_error = opt_error ? opt_error : {\n        status: '-1',\n        msg: '请求失败',\n    };\n\n    fetch(url, {\n        method: 'GET',\n        credentials: 'include'\n    })\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);\n        })\n        .catch((error) => {\n            callback(get_error);\n        });\n};"]},"metadata":{},"sourceType":"module"}