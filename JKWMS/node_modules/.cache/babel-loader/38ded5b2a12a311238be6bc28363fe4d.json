{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rcDropdown = require('rc-dropdown');\n\nvar _rcDropdown2 = _interopRequireDefault(_rcDropdown);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _warning = require('../_util/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar Dropdown = function (_React$Component) {\n  (0, _inherits3['default'])(Dropdown, _React$Component);\n\n  function Dropdown() {\n    (0, _classCallCheck3['default'])(this, Dropdown);\n    return (0, _possibleConstructorReturn3['default'])(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).apply(this, arguments));\n  }\n\n  (0, _createClass3['default'])(Dropdown, [{\n    key: 'getTransitionName',\n    value: function getTransitionName() {\n      var _props = this.props,\n          _props$placement = _props.placement,\n          placement = _props$placement === undefined ? '' : _props$placement,\n          transitionName = _props.transitionName;\n\n      if (transitionName !== undefined) {\n        return transitionName;\n      }\n\n      if (placement.indexOf('top') >= 0) {\n        return 'slide-down';\n      }\n\n      return 'slide-up';\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var overlay = this.props.overlay;\n\n      if (overlay) {\n        var overlayProps = overlay.props;\n        (0, _warning2['default'])(!overlayProps.mode || overlayProps.mode === 'vertical', 'mode=\"' + overlayProps.mode + '\" is not supported for Dropdown\\'s Menu.');\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          prefixCls = _props2.prefixCls,\n          overlayElements = _props2.overlay,\n          trigger = _props2.trigger,\n          disabled = _props2.disabled;\n      var child = React.Children.only(children);\n      var overlay = React.Children.only(overlayElements);\n      var dropdownTrigger = React.cloneElement(child, {\n        className: (0, _classnames2['default'])(child.props.className, prefixCls + '-trigger'),\n        disabled: disabled\n      }); // menu cannot be selectable in dropdown defaultly\n      // menu should be focusable in dropdown defaultly\n\n      var _overlay$props = overlay.props,\n          _overlay$props$select = _overlay$props.selectable,\n          selectable = _overlay$props$select === undefined ? false : _overlay$props$select,\n          _overlay$props$focusa = _overlay$props.focusable,\n          focusable = _overlay$props$focusa === undefined ? true : _overlay$props$focusa;\n      var expandIcon = React.createElement('span', {\n        className: prefixCls + '-menu-submenu-arrow'\n      }, React.createElement(_icon2['default'], {\n        type: 'right',\n        className: prefixCls + '-menu-submenu-arrow-icon'\n      }));\n      var fixedModeOverlay = typeof overlay.type === 'string' ? overlay : React.cloneElement(overlay, {\n        mode: 'vertical',\n        selectable: selectable,\n        focusable: focusable,\n        expandIcon: expandIcon\n      });\n      var triggerActions = disabled ? [] : trigger;\n      var alignPoint = void 0;\n\n      if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n        alignPoint = true;\n      }\n\n      return React.createElement(_rcDropdown2['default'], (0, _extends3['default'])({\n        alignPoint: alignPoint\n      }, this.props, {\n        transitionName: this.getTransitionName(),\n        trigger: triggerActions,\n        overlay: fixedModeOverlay\n      }), dropdownTrigger);\n    }\n  }]);\n  return Dropdown;\n}(React.Component);\n\nexports['default'] = Dropdown;\nDropdown.defaultProps = {\n  prefixCls: 'ant-dropdown',\n  mouseEnterDelay: 0.15,\n  mouseLeaveDelay: 0.1,\n  placement: 'bottomLeft'\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}