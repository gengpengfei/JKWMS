{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _checkbox = require('../checkbox');\n\nvar _checkbox2 = _interopRequireDefault(_checkbox);\n\nvar _dropdown = require('../dropdown');\n\nvar _dropdown2 = _interopRequireDefault(_dropdown);\n\nvar _menu = require('../menu');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar SelectionCheckboxAll = function (_React$Component) {\n  (0, _inherits3['default'])(SelectionCheckboxAll, _React$Component);\n\n  function SelectionCheckboxAll(props) {\n    (0, _classCallCheck3['default'])(this, SelectionCheckboxAll);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (SelectionCheckboxAll.__proto__ || Object.getPrototypeOf(SelectionCheckboxAll)).call(this, props));\n\n    _this.handleSelectAllChagne = function (e) {\n      var checked = e.target.checked;\n\n      _this.props.onSelect(checked ? 'all' : 'removeAll', 0, null);\n    };\n\n    _this.defaultSelections = props.hideDefaultSelections ? [] : [{\n      key: 'all',\n      text: props.locale.selectAll,\n      onSelect: function onSelect() {}\n    }, {\n      key: 'invert',\n      text: props.locale.selectInvert,\n      onSelect: function onSelect() {}\n    }];\n    _this.state = {\n      checked: _this.getCheckState(props),\n      indeterminate: _this.getIndeterminateState(props)\n    };\n    return _this;\n  }\n\n  (0, _createClass3['default'])(SelectionCheckboxAll, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.subscribe();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.setCheckState(nextProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      var _this2 = this;\n\n      var store = this.props.store;\n      this.unsubscribe = store.subscribe(function () {\n        _this2.setCheckState(_this2.props);\n      });\n    }\n  }, {\n    key: 'checkSelection',\n    value: function checkSelection(data, type, byDefaultChecked) {\n      var _props = this.props,\n          store = _props.store,\n          getCheckboxPropsByItem = _props.getCheckboxPropsByItem,\n          getRecordKey = _props.getRecordKey; // type should be 'every' | 'some'\n\n      if (type === 'every' || type === 'some') {\n        return byDefaultChecked ? data[type](function (item, i) {\n          return getCheckboxPropsByItem(item, i).defaultChecked;\n        }) : data[type](function (item, i) {\n          return store.getState().selectedRowKeys.indexOf(getRecordKey(item, i)) >= 0;\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: 'setCheckState',\n    value: function setCheckState(props) {\n      var checked = this.getCheckState(props);\n      var indeterminate = this.getIndeterminateState(props);\n      this.setState(function (prevState) {\n        var newState = {};\n\n        if (indeterminate !== prevState.indeterminate) {\n          newState.indeterminate = indeterminate;\n        }\n\n        if (checked !== prevState.checked) {\n          newState.checked = checked;\n        }\n\n        return newState;\n      });\n    }\n  }, {\n    key: 'getCheckState',\n    value: function getCheckState(props) {\n      var store = props.store,\n          data = props.data;\n      var checked = void 0;\n\n      if (!data.length) {\n        checked = false;\n      } else {\n        checked = store.getState().selectionDirty ? this.checkSelection(data, 'every', false) : this.checkSelection(data, 'every', false) || this.checkSelection(data, 'every', true);\n      }\n\n      return checked;\n    }\n  }, {\n    key: 'getIndeterminateState',\n    value: function getIndeterminateState(props) {\n      var store = props.store,\n          data = props.data;\n      var indeterminate = void 0;\n\n      if (!data.length) {\n        indeterminate = false;\n      } else {\n        indeterminate = store.getState().selectionDirty ? this.checkSelection(data, 'some', false) && !this.checkSelection(data, 'every', false) : this.checkSelection(data, 'some', false) && !this.checkSelection(data, 'every', false) || this.checkSelection(data, 'some', true) && !this.checkSelection(data, 'every', true);\n      }\n\n      return indeterminate;\n    }\n  }, {\n    key: 'renderMenus',\n    value: function renderMenus(selections) {\n      var _this3 = this;\n\n      return selections.map(function (selection, index) {\n        return React.createElement(_menu2['default'].Item, {\n          key: selection.key || index\n        }, React.createElement('div', {\n          onClick: function onClick() {\n            _this3.props.onSelect(selection.key, index, selection.onSelect);\n          }\n        }, selection.text));\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          disabled = _props2.disabled,\n          prefixCls = _props2.prefixCls,\n          selections = _props2.selections,\n          getPopupContainer = _props2.getPopupContainer;\n      var _state = this.state,\n          checked = _state.checked,\n          indeterminate = _state.indeterminate;\n      var selectionPrefixCls = prefixCls + '-selection';\n      var customSelections = null;\n\n      if (selections) {\n        var newSelections = Array.isArray(selections) ? this.defaultSelections.concat(selections) : this.defaultSelections;\n        var menu = React.createElement(_menu2['default'], {\n          className: selectionPrefixCls + '-menu',\n          selectedKeys: []\n        }, this.renderMenus(newSelections));\n        customSelections = newSelections.length > 0 ? React.createElement(_dropdown2['default'], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, React.createElement('div', {\n          className: selectionPrefixCls + '-down'\n        }, React.createElement(_icon2['default'], {\n          type: 'down'\n        }))) : null;\n      }\n\n      return React.createElement('div', {\n        className: selectionPrefixCls\n      }, React.createElement(_checkbox2['default'], {\n        className: (0, _classnames2['default'])((0, _defineProperty3['default'])({}, selectionPrefixCls + '-select-all-custom', customSelections)),\n        checked: checked,\n        indeterminate: indeterminate,\n        disabled: disabled,\n        onChange: this.handleSelectAllChagne\n      }), customSelections);\n    }\n  }]);\n  return SelectionCheckboxAll;\n}(React.Component);\n\nexports['default'] = SelectionCheckboxAll;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}