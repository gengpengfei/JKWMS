{"ast":null,"code":"// let CryptoJS = require(\"crypto-js\");\nexport var BASEURL = 'http://localhost:80/';\nvar reqUrl = {\n  //-- 登录模块\n  login: BASEURL + 'api/AdminUser/adminLogin',\n  //-- 用户登录\n  getMenuList: BASEURL + 'api/AdminUser/getUserActionList/',\n  //-- 用户权限列表\n  //-- 商品模块\n  getGoodsList: BASEURL + 'api/Product/productList',\n  //-- 商品列表\n  productExport: BASEURL + 'api/Product/productExport',\n  //-- 商品导出  \n  productDownload: BASEURL + 'api/Product/productDownload',\n  //-- 商品导入模版下载\n  productImport: BASEURL + 'api/Product/productImport',\n  //-- 商品信息导入\n  productVenDownload: BASEURL + 'api/Product/venProDownload',\n  //-- 商品供应商关系模版下载\n  productVenImport: BASEURL + 'api/Product/venProImport',\n  //-- 商品供应商关系导入\n  productDetail: BASEURL + 'api/Product/productDetail',\n  //-- 商品详情\n  productVendorList: BASEURL + 'api/Product/vendor',\n  //-- 供应商列表\n  productBindVendor: BASEURL + 'api/Product/vendorGood',\n  //-- 绑定供应商\n  //-- 商品类型模块\n  getGoodsTypeList: BASEURL + 'api/ProductType/index',\n  //-- 商品分类列表\n  getParentCode: BASEURL + 'api/ProductType/parentCode',\n  //-- 父类型列表\n  productTypeAdd: BASEURL + 'api/ProductType/productTypeAdd',\n  //-- 添加商品分类列表\n  productTypeDel: BASEURL + 'api/ProductType/proTypeDel',\n  //-- 删除商品分类\n  proTypeDetail: BASEURL + 'api/ProductType/proTypeDetail',\n  //-- 获取商品分类详情\n  productTypeEdit: BASEURL + 'api/ProductType/productTypeEdit',\n  //-- 编辑商品分类详情\n  proTypeDownload: BASEURL + 'api/ProductType/proTypeDownload',\n  //-- 商品分类导入模版下载\n  proTypeImport: BASEURL + 'api/ProductType/proTypeImport',\n  //-- 文件上传\n  //-- 不推送库存管理模块\n  proExcludeList: BASEURL + 'api/ProExclude/index',\n  //-- 不推送库存商品列表\n  proExcludeDel: BASEURL + 'api/ProExclude/proExcludeDel',\n  //-- 不推送库存商品删除\n  proExcludeAdd: BASEURL + 'api/ProExclude/proExcludeAdd',\n  //-- 不推送库存商品添加\n  proExcludeEdit: BASEURL + 'api/ProExclude/proExcludeEdit',\n  //-- 不推送库存商品编辑\n  //-- 商品转换管理模块\n  proFruitList: BASEURL + 'api/ProFruit/index',\n  //-- 商品转换管理\n  proFruitDetail: BASEURL + 'api/ProFruit/proFruitDetail',\n  //-- 商品转换详情\n  proFruitDel: BASEURL + 'api/ProFruit/proFruitDel',\n  //-- 商品转换管理删除\n  proFruitAdd: BASEURL + 'api/ProFruit/proFruitAdd',\n  //-- 商品转换管理添加\n  proFruitEdit: BASEURL + 'api/ProFruit/proFruitEdit',\n  //-- 商品转换管理编辑\n  //-- 商品下架申请模块\n  proOfflineList: BASEURL + 'api/ProOffline/index',\n  //-- 商品下架申请列表\n  proOfflineDel: BASEURL + 'api/ProOffline/delete',\n  //-- 商品下架申请删除\n  proApplyUnder: BASEURL + 'api/ProOffline/applyUnder',\n  //-- 商品申请下架\n  proOfflineReviewed: BASEURL + 'api/ProOffline/reviewed',\n  //-- 商下架申请通过\n  proOfflineRefuse: BASEURL + 'api/ProOffline/refuse',\n  //-- 商下架申请拒绝\n  //-- 厂商管理模块\n  vendorList: BASEURL + 'api/Vendor/index',\n  //-- 厂商列表\n  vendorAdd: BASEURL + 'api/Vendor/vendorAdd',\n  //-- 厂商添加  \n  vendorEdit: BASEURL + 'api/Vendor/vendorEdit',\n  //-- 厂商编辑 \n  vendorDel: BASEURL + 'api/Vendor/vendorDel',\n  //-- 厂商删除  \n  vendorDetail: BASEURL + 'api/Vendor/vendorDetail',\n  //-- 厂商详情\n  vendorProductList: BASEURL + 'api/Vendor/Product',\n  //-- 商品列表\n  vendorBindedProduct: BASEURL + 'api/Vendor/venProduct',\n  //-- 厂商绑定过商品列表\n  vendorBindProduct: BASEURL + 'api/Vendor/vendorGood',\n  //-- 厂商绑定商品\n  vendorDownload: BASEURL + 'api/Vendor/vendorDownload',\n  //-- 厂商信息导入模版下载\n  vendorImport: BASEURL + 'api/Vendor/vendorImport',\n  //-- 厂商信息导入\n  vendorBindProductDownload: BASEURL + 'api/Vendor/venProDownload',\n  //-- 厂商绑定商品模版下载\n  VendorBindProductImport: BASEURL + 'api/Vendor/venProImport',\n  //-- 厂商绑定商品导入\n  //-- 仓库管理模块\n  warehouseList: BASEURL + 'api/Warehouse/index',\n  //-- 仓库列表\n  warehouseAdd: BASEURL + 'api/Warehouse/warehouseAdd',\n  //-- 厂商添加  \n  warehouseEdit: BASEURL + 'api/Warehouse/warehouseEdit',\n  //-- 厂商编辑 \n  warehouseDel: BASEURL + 'api/Warehouse/warehouseDel' //-- 厂商删除  \n\n  /*** 对请求数据进行加密*/\n  // function serviceRequestEncryption(bodyData) {\n  //     let preKey = '87749CECEA24B1C314CC27CF7952EBC3'; //Md5加密（32位大写）\n  //     let objKeys = Object.keys(bodyData);\n  //     objKeys.sort(); //排序\n  //     let signStr = '';\n  //     objKeys.forEach(item => {\n  //         signStr = signStr + bodyData[item];\n  //     });\n  //     signStr = signStr + preKey;\n  //     let md51 = CryptoJS.MD5(signStr).toString();\n  //     let md51Super = md51.toUpperCase();\n  //     md51Super = md51Super.substring(2, 18);\n  //     let md52 = CryptoJS.MD5(md51Super).toString();\n  //     bodyData['sign'] = md52.toUpperCase();\n  //     return bodyData;\n  // }\n\n};\nexport function NetWork_Post(net_api, bodyData, callback, netOptions) {\n  // 加密\n  // bodyData = serviceRequestEncryption(bodyData);\n  var opt_headers, opt_error;\n\n  if (typeof netOptions === 'object') {\n    opt_headers = netOptions['headers'];\n    opt_error = netOptions['error'];\n  }\n\n  ;\n  var post_header = opt_headers ? opt_headers : {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  var post_error = opt_error ? opt_error : {\n    status: '1004',\n    msg: '网络延时，请稍后重试！'\n  };\n  var url = reqUrl[net_api];\n  console.log(url);\n  var fetchOptions = {\n    method: 'POST',\n    // mode: 'cors',\n    headers: post_header,\n    body: JSON.stringify(bodyData)\n  };\n  fetch(url, fetchOptions).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData); //回调\n  }).catch(function (error) {\n    callback(post_error);\n  });\n}\nexport function NetWork_Get(net_api, callback, netOptions) {\n  var url = reqUrl[net_api];\n  var opt_error;\n\n  if (typeof netOptions === 'object') {\n    opt_error = netOptions['error'];\n  }\n\n  ;\n  var get_error = opt_error ? opt_error : {\n    status: '-1',\n    msg: '请求失败'\n  };\n  fetch(url, {\n    method: 'GET',\n    credentials: 'include'\n  }).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData);\n  }).catch(function (error) {\n    callback(get_error);\n  });\n}\n;\nexport function NetWork_File(net_api, bodyData, callback) {\n  // 加密\n  // bodyData = serviceRequestEncryption(bodyData);\n  var post_header = {};\n  var post_error = {\n    status: '1004',\n    msg: '网络延时，请稍后重试！'\n  };\n  var url = reqUrl[net_api];\n  var fetchOptions = {\n    method: 'POST',\n    // mode: 'cors',\n    headers: post_header,\n    body: bodyData\n  };\n  fetch(url, fetchOptions).then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    var responseData = JSON.parse(responseText);\n    callback(responseData); //回调\n  }).catch(function (error) {\n    callback(post_error);\n  });\n}","map":{"version":3,"sources":["/Users/jk/Desktop/obj/jkwmsweb/src/network/netUtils.js"],"names":["BASEURL","reqUrl","login","getMenuList","getGoodsList","productExport","productDownload","productImport","productVenDownload","productVenImport","productDetail","productVendorList","productBindVendor","getGoodsTypeList","getParentCode","productTypeAdd","productTypeDel","proTypeDetail","productTypeEdit","proTypeDownload","proTypeImport","proExcludeList","proExcludeDel","proExcludeAdd","proExcludeEdit","proFruitList","proFruitDetail","proFruitDel","proFruitAdd","proFruitEdit","proOfflineList","proOfflineDel","proApplyUnder","proOfflineReviewed","proOfflineRefuse","vendorList","vendorAdd","vendorEdit","vendorDel","vendorDetail","vendorProductList","vendorBindedProduct","vendorBindProduct","vendorDownload","vendorImport","vendorBindProductDownload","VendorBindProductImport","warehouseList","warehouseAdd","warehouseEdit","warehouseDel","NetWork_Post","net_api","bodyData","callback","netOptions","opt_headers","opt_error","post_header","post_error","status","msg","url","console","log","fetchOptions","method","headers","body","JSON","stringify","fetch","then","response","text","responseText","responseData","parse","catch","error","NetWork_Get","get_error","credentials","NetWork_File"],"mappings":"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","sourcesContent":["// let CryptoJS = require(\"crypto-js\");\nexport const BASEURL = 'http://localhost:80/';\nvar reqUrl = {\n    //-- 登录模块\n    login: BASEURL + 'api/AdminUser/adminLogin',  //-- 用户登录\n    getMenuList: BASEURL + 'api/AdminUser/getUserActionList/',  //-- 用户权限列表\n\n    //-- 商品模块\n    getGoodsList: BASEURL + 'api/Product/productList',  //-- 商品列表\n    productExport: BASEURL + 'api/Product/productExport',//-- 商品导出  \n    productDownload: BASEURL + 'api/Product/productDownload',//-- 商品导入模版下载\n    productImport: BASEURL + 'api/Product/productImport',//-- 商品信息导入\n    productVenDownload: BASEURL + 'api/Product/venProDownload',//-- 商品供应商关系模版下载\n    productVenImport: BASEURL + 'api/Product/venProImport',//-- 商品供应商关系导入\n    productDetail: BASEURL + 'api/Product/productDetail',  //-- 商品详情\n    productVendorList: BASEURL + 'api/Product/vendor',//-- 供应商列表\n    productBindVendor: BASEURL + 'api/Product/vendorGood',//-- 绑定供应商\n\n    //-- 商品类型模块\n    getGoodsTypeList: BASEURL + 'api/ProductType/index',  //-- 商品分类列表\n    getParentCode: BASEURL + 'api/ProductType/parentCode', //-- 父类型列表\n    productTypeAdd: BASEURL + 'api/ProductType/productTypeAdd', //-- 添加商品分类列表\n    productTypeDel: BASEURL + 'api/ProductType/proTypeDel', //-- 删除商品分类\n    proTypeDetail: BASEURL + 'api/ProductType/proTypeDetail',//-- 获取商品分类详情\n    productTypeEdit: BASEURL + 'api/ProductType/productTypeEdit',//-- 编辑商品分类详情\n    proTypeDownload: BASEURL + 'api/ProductType/proTypeDownload',//-- 商品分类导入模版下载\n    proTypeImport: BASEURL + 'api/ProductType/proTypeImport', //-- 文件上传\n\n    //-- 不推送库存管理模块\n    proExcludeList: BASEURL + 'api/ProExclude/index', //-- 不推送库存商品列表\n    proExcludeDel: BASEURL + 'api/ProExclude/proExcludeDel', //-- 不推送库存商品删除\n    proExcludeAdd: BASEURL + 'api/ProExclude/proExcludeAdd', //-- 不推送库存商品添加\n    proExcludeEdit: BASEURL + 'api/ProExclude/proExcludeEdit', //-- 不推送库存商品编辑\n\n    //-- 商品转换管理模块\n    proFruitList: BASEURL + 'api/ProFruit/index', //-- 商品转换管理\n    proFruitDetail: BASEURL + 'api/ProFruit/proFruitDetail', //-- 商品转换详情\n    proFruitDel: BASEURL + 'api/ProFruit/proFruitDel', //-- 商品转换管理删除\n    proFruitAdd: BASEURL + 'api/ProFruit/proFruitAdd', //-- 商品转换管理添加\n    proFruitEdit: BASEURL + 'api/ProFruit/proFruitEdit', //-- 商品转换管理编辑\n\n    //-- 商品下架申请模块\n    proOfflineList: BASEURL + 'api/ProOffline/index', //-- 商品下架申请列表\n    proOfflineDel: BASEURL + 'api/ProOffline/delete', //-- 商品下架申请删除\n    proApplyUnder: BASEURL + 'api/ProOffline/applyUnder', //-- 商品申请下架\n    proOfflineReviewed: BASEURL + 'api/ProOffline/reviewed', //-- 商下架申请通过\n    proOfflineRefuse: BASEURL + 'api/ProOffline/refuse', //-- 商下架申请拒绝\n\n    //-- 厂商管理模块\n    vendorList: BASEURL + 'api/Vendor/index',  //-- 厂商列表\n    vendorAdd: BASEURL + 'api/Vendor/vendorAdd',//-- 厂商添加  \n    vendorEdit: BASEURL + 'api/Vendor/vendorEdit',//-- 厂商编辑 \n    vendorDel: BASEURL + 'api/Vendor/vendorDel',//-- 厂商删除  \n    vendorDetail: BASEURL + 'api/Vendor/vendorDetail',  //-- 厂商详情\n    vendorProductList: BASEURL + 'api/Vendor/Product',  //-- 商品列表\n    vendorBindedProduct: BASEURL + 'api/Vendor/venProduct',  //-- 厂商绑定过商品列表\n    vendorBindProduct: BASEURL + 'api/Vendor/vendorGood',//-- 厂商绑定商品\n    vendorDownload: BASEURL + 'api/Vendor/vendorDownload',//-- 厂商信息导入模版下载\n    vendorImport: BASEURL + 'api/Vendor/vendorImport',//-- 厂商信息导入\n    vendorBindProductDownload: BASEURL + 'api/Vendor/venProDownload',//-- 厂商绑定商品模版下载\n    VendorBindProductImport: BASEURL + 'api/Vendor/venProImport',//-- 厂商绑定商品导入\n\n    //-- 仓库管理模块\n    warehouseList: BASEURL + 'api/Warehouse/index',//-- 仓库列表\n    warehouseAdd: BASEURL + 'api/Warehouse/warehouseAdd',//-- 厂商添加  \n    warehouseEdit: BASEURL + 'api/Warehouse/warehouseEdit',//-- 厂商编辑 \n    warehouseDel: BASEURL + 'api/Warehouse/warehouseDel',//-- 厂商删除  \n}\n/*** 对请求数据进行加密*/\n// function serviceRequestEncryption(bodyData) {\n//     let preKey = '87749CECEA24B1C314CC27CF7952EBC3'; //Md5加密（32位大写）\n//     let objKeys = Object.keys(bodyData);\n//     objKeys.sort(); //排序\n\n//     let signStr = '';\n//     objKeys.forEach(item => {\n//         signStr = signStr + bodyData[item];\n//     });\n//     signStr = signStr + preKey;\n\n//     let md51 = CryptoJS.MD5(signStr).toString();\n//     let md51Super = md51.toUpperCase();\n\n//     md51Super = md51Super.substring(2, 18);\n//     let md52 = CryptoJS.MD5(md51Super).toString();\n\n//     bodyData['sign'] = md52.toUpperCase();\n//     return bodyData;\n// }\n\nexport function NetWork_Post(net_api, bodyData, callback, netOptions) {\n    // 加密\n    // bodyData = serviceRequestEncryption(bodyData);\n    let opt_headers, opt_error;\n    if (typeof netOptions === 'object') {\n        opt_headers = netOptions['headers'];\n        opt_error = netOptions['error'];\n    };\n\n    let post_header = opt_headers ? opt_headers : {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    };\n\n    let post_error = opt_error ? opt_error : {\n        status: '1004',\n        msg: '网络延时，请稍后重试！',\n    };\n    let url = reqUrl[net_api];\n    console.log(url)\n    let fetchOptions = {\n        method: 'POST',\n        // mode: 'cors',\n        headers: post_header,\n        body: JSON.stringify(bodyData),\n    }\n    fetch(url, fetchOptions)\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);//回调\n        })\n        .catch(error => {\n            callback(post_error);\n        })\n}\n\nexport function NetWork_Get(net_api, callback, netOptions) {\n\n    let url = reqUrl[net_api];\n    let opt_error;\n\n    if (typeof netOptions === 'object') {\n        opt_error = netOptions['error'];\n    };\n\n    let get_error = opt_error ? opt_error : {\n        status: '-1',\n        msg: '请求失败',\n    };\n\n    fetch(url, {\n        method: 'GET',\n        credentials: 'include'\n    })\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);\n        })\n        .catch((error) => {\n            callback(get_error);\n        });\n};\n\nexport function NetWork_File(net_api, bodyData, callback) {\n    // 加密\n    // bodyData = serviceRequestEncryption(bodyData);\n    let post_header = {};\n    let post_error = {\n        status: '1004',\n        msg: '网络延时，请稍后重试！',\n    };\n    let url = reqUrl[net_api];\n    let fetchOptions = {\n        method: 'POST',\n        // mode: 'cors',\n        headers: post_header,\n        body: bodyData,\n    }\n    fetch(url, fetchOptions)\n        .then((response) => response.text())\n        .then((responseText) => {\n            let responseData = JSON.parse(responseText);\n            callback(responseData);//回调\n        })\n        .catch(error => {\n            callback(post_error);\n        });\n\n}"]},"metadata":{},"sourceType":"module"}